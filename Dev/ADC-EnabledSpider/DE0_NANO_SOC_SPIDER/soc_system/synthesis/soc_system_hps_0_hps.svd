<?xml version="1.0" encoding="UTF-8"?><device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd" schemaVersion="1.1">
 <vendor>default_vendor.com</vendor>
 <vendorID>default_vendor_com</vendorID>
 <name>soc_system_hps_0_hps</name>
 <version>0.0</version>
 <description>Address map for the HHP HPS system-domain</description>
 <addressUnitBits>8</addressUnitBits>
 <width>32</width>
 <access>read-write</access>
 <peripherals>
  <peripheral>
   <name>stm</name>
   <version>0.0</version>
   <description>Address space allocated to the STM. For detailed information about the use of this address space, [url=http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0444b/index.html]click here[/url] to access the ARM documentation for the CoreSight STM-101.</description>
   <baseAddress>0xfc000000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x0</offset>
    <size>0x4</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>reg</name>
     <description>Placeholder</description>
     <addressOffset>0x0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>fld</name>
       <description>Placeholder</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <peripheral>
   <name>dap</name>
   <version>0.0</version>
   <description>Address space allocated to the DAP. For detailed information about the use of this address space, [url=http://infocenter.arm.com/help/topic/com.arm.doc.ddi0314h/index.html]click here[/url] to access the ARM documentation for the DAP.</description>
   <baseAddress>0xff000000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x0</offset>
    <size>0x4</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>reg</name>
     <description>Placeholder</description>
     <addressOffset>0x0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <fields>
      <field>
       <name>fld</name>
       <description>Placeholder</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <peripheral>
   <name>lwfpgaslaves</name>
   <version>0.0</version>
   <baseAddress>0xff200000</baseAddress>
   <access>read-write</access>
  </peripheral>
  <peripheral>
   <name>lwhps2fpgaregs</name>
   <version>0.0</version>
   <description>Registers in the LWHPS2FPGA AXI Bridge Module.</description>
   <baseAddress>0xff400000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x0</offset>
    <size>0x4510c</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>idgrp_periph_id_4</name>
     <description>JEP106 continuation code</description>
     <addressOffset>0x1fd0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x4</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>periph_id_4</name>
       <description>JEP106 continuation code</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_0</name>
     <description>Peripheral ID0</description>
     <addressOffset>0x1fe0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x1</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>pn7to0</name>
       <description>Part Number [7:0]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_1</name>
     <description>Peripheral ID1</description>
     <addressOffset>0x1fe4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xb3</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>jep3to0_pn11to8</name>
       <description>JEP106[3:0], Part Number [11:8]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_2</name>
     <description>Peripheral ID2</description>
     <addressOffset>0x1fe8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x6b</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rev_jepcode_jep6to4</name>
       <description>Revision, JEP106 code flag, JEP106[6:4]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_3</name>
     <description>Peripheral ID3</description>
     <addressOffset>0x1fec</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cust_mod_num</name>
       <description>Customer Model Number</description>
       <lsb>0</lsb>
       <msb>3</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>rev_and</name>
       <description>Revision</description>
       <lsb>4</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_0</name>
     <description>Component ID0</description>
     <addressOffset>0x1ff0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xd</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_1</name>
     <description>Component ID1</description>
     <addressOffset>0x1ff4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xf0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>genipcompcls_preamble</name>
       <description>Generic IP component class, Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_2</name>
     <description>Component ID2</description>
     <addressOffset>0x1ff8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x5</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_3</name>
     <description>Component ID3</description>
     <addressOffset>0x1ffc</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xb1</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_fpga2hpsregs_fn_mod_bm_iss</name>
     <description>Sets the issuing capability of the preceding switch arbitration scheme to multiple or single outstanding transactions.</description>
     <addressOffset>0x2008</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_bm_iss_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_bm_iss_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_fpga2hpsregs_ahb_cntl</name>
     <description>Sets the block issuing capability to one outstanding transaction.</description>
     <addressOffset>0x2044</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>decerr_en</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_ahb_cntl_template_decerr_en_enum</name>
         <enumeratedValue>
          <name>disable</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enable</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>force_incr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_ahb_cntl_template_force_incr_enum</name>
         <enumeratedValue>
          <name>disable</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enable</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_hps2fpgaregs_fn_mod_bm_iss</name>
     <description>Sets the issuing capability of the preceding switch arbitration scheme to multiple or single outstanding transactions.</description>
     <addressOffset>0x3008</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_bm_iss_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_bm_iss_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_hps2fpgaregs_ahb_cntl</name>
     <description>Sets the block issuing capability to one outstanding transaction.</description>
     <addressOffset>0x3044</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>decerr_en</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_ahb_cntl_template_decerr_en_enum</name>
         <enumeratedValue>
          <name>disable</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enable</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>force_incr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_ahb_cntl_template_force_incr_enum</name>
         <enumeratedValue>
          <name>disable</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enable</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b32_fn_mod_bm_iss</name>
     <description>Sets the issuing capability of the preceding switch arbitration scheme to multiple or single outstanding transactions.</description>
     <addressOffset>0x5008</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_bm_iss_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_bm_iss_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b32_wr_tidemark</name>
     <description>Controls the release of the transaction in the write data FIFO.</description>
     <addressOffset>0x5040</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x4</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>level</name>
       <description> Stalls the transaction in the write data FIFO until the number of occupied slots in the write data FIFO exceeds the level. Note that the transaction is released before this level is achieved if the network receives the WLAST beat or the write FIFO becomes full. </description>
       <lsb>0</lsb>
       <msb>3</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b32_fn_mod</name>
     <description>Sets the block issuing capability to multiple or single outstanding transactions.</description>
     <addressOffset>0x5108</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>slavegrp_b32_fn_mod</name>
     <description>Sets the block issuing capability to multiple or single outstanding transactions.</description>
     <addressOffset>0x45108</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>lwhps2fpgaregs_fn_mod_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <peripheral>
   <name>hps2fpgaregs</name>
   <version>0.0</version>
   <description>Registers in the HPS2FPGA AXI Bridge Module.</description>
   <baseAddress>0xff500000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x0</offset>
    <size>0x410c</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>idgrp_periph_id_4</name>
     <description>JEP106 continuation code</description>
     <addressOffset>0x1fd0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x4</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>periph_id_4</name>
       <description>JEP106 continuation code</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_0</name>
     <description>Peripheral ID0</description>
     <addressOffset>0x1fe0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x1</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>pn7to0</name>
       <description>Part Number [7:0]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_1</name>
     <description>Peripheral ID1</description>
     <addressOffset>0x1fe4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xb3</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>jep3to0_pn11to8</name>
       <description>JEP106[3:0], Part Number [11:8]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_2</name>
     <description>Peripheral ID2</description>
     <addressOffset>0x1fe8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x6b</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rev_jepcode_jep6to4</name>
       <description>Revision, JEP106 code flag, JEP106[6:4]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_3</name>
     <description>Peripheral ID3</description>
     <addressOffset>0x1fec</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cust_mod_num</name>
       <description>Customer Model Number</description>
       <lsb>0</lsb>
       <msb>3</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>rev_and</name>
       <description>Revision</description>
       <lsb>4</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_0</name>
     <description>Component ID0</description>
     <addressOffset>0x1ff0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xd</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_1</name>
     <description>Component ID1</description>
     <addressOffset>0x1ff4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xf0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>genipcompcls_preamble</name>
       <description>Generic IP component class, Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_2</name>
     <description>Component ID2</description>
     <addressOffset>0x1ff8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x5</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_3</name>
     <description>Component ID3</description>
     <addressOffset>0x1ffc</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xb1</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b32_fn_mod2</name>
     <description>Controls bypass merge of upsizing/downsizing.</description>
     <addressOffset>0x2024</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>bypass_merge</name>
       <description>Controls bypass merge of upsizing/downsizing.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>hps2fpgaregs_fn_mod2_template_bypass_merge_enum</name>
         <enumeratedValue>
          <name>alter</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>noalter</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b32_fn_mod</name>
     <description>Sets the block issuing capability to multiple or single outstanding transactions.</description>
     <addressOffset>0x2108</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>hps2fpgaregs_fn_mod_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>hps2fpgaregs_fn_mod_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b128_fn_mod2</name>
     <description>Controls bypass merge of upsizing/downsizing.</description>
     <addressOffset>0x4024</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>bypass_merge</name>
       <description>Controls bypass merge of upsizing/downsizing.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>hps2fpgaregs_fn_mod2_template_bypass_merge_enum</name>
         <enumeratedValue>
          <name>alter</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>noalter</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>mastergrp_b128_fn_mod</name>
     <description>Sets the block issuing capability to multiple or single outstanding transactions.</description>
     <addressOffset>0x4108</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>hps2fpgaregs_fn_mod_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>hps2fpgaregs_fn_mod_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <peripheral>
   <name>fpga2hpsregs</name>
   <version>0.0</version>
   <description>Registers in the FPGA2HPS AXI Bridge Module.</description>
   <baseAddress>0xff600000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x0</offset>
    <size>0x4410c</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>idgrp_periph_id_4</name>
     <description>JEP106 continuation code</description>
     <addressOffset>0x1fd0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x4</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>periph_id_4</name>
       <description>JEP106 continuation code</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_0</name>
     <description>Peripheral ID0</description>
     <addressOffset>0x1fe0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x1</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>pn7to0</name>
       <description>Part Number [7:0]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_1</name>
     <description>Peripheral ID1</description>
     <addressOffset>0x1fe4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xb3</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>jep3to0_pn11to8</name>
       <description>JEP106[3:0], Part Number [11:8]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_2</name>
     <description>Peripheral ID2</description>
     <addressOffset>0x1fe8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x6b</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rev_jepcode_jep6to4</name>
       <description>Revision, JEP106 code flag, JEP106[6:4]</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_periph_id_3</name>
     <description>Peripheral ID3</description>
     <addressOffset>0x1fec</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cust_mod_num</name>
       <description>Customer Model Number</description>
       <lsb>0</lsb>
       <msb>3</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>rev_and</name>
       <description>Revision</description>
       <lsb>4</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_0</name>
     <description>Component ID0</description>
     <addressOffset>0x1ff0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xd</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_1</name>
     <description>Component ID1</description>
     <addressOffset>0x1ff4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xf0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>genipcompcls_preamble</name>
       <description>Generic IP component class, Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_2</name>
     <description>Component ID2</description>
     <addressOffset>0x1ff8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x5</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>idgrp_comp_id_3</name>
     <description>Component ID3</description>
     <addressOffset>0x1ffc</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0xb1</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>preamble</name>
       <description>Preamble</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>slavegrp_b32_fn_mod2</name>
     <description>Controls bypass merge of upsizing/downsizing.</description>
     <addressOffset>0x42024</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>bypass_merge</name>
       <description>Controls bypass merge of upsizing/downsizing.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>fpga2hpsregs_fn_mod2_template_bypass_merge_enum</name>
         <enumeratedValue>
          <name>alter</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>noalter</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>slavegrp_b32_fn_mod</name>
     <description>Sets the block issuing capability to multiple or single outstanding transactions.</description>
     <addressOffset>0x42108</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>fpga2hpsregs_fn_mod_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>fpga2hpsregs_fn_mod_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>slavegrp_b128_fn_mod2</name>
     <description>Controls bypass merge of upsizing/downsizing.</description>
     <addressOffset>0x44024</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>bypass_merge</name>
       <description>Controls bypass merge of upsizing/downsizing.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>fpga2hpsregs_fn_mod2_template_bypass_merge_enum</name>
         <enumeratedValue>
          <name>alter</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>noalter</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>slavegrp_b128_fn_mod</name>
     <description>Sets the block issuing capability to multiple or single outstanding transactions.</description>
     <addressOffset>0x44108</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rd</name>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>fpga2hpsregs_fn_mod_template_rd_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wr</name>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>fpga2hpsregs_fn_mod_template_wr_enum</name>
         <enumeratedValue>
          <name>multiple</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>single</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
   </registers>
  </peripheral>
  <peripheral>
   <name>emac0</name>
   <version>0.0</version>
   <description>Registers in the EMAC module.</description>
   <disableCondition>(Peripherals-&gt;rstmgr-&gt;rstmgr_permodrst-&gt;emac0 == 1)</disableCondition><baseAddress>0xff700000</baseAddress>
   <access>read-write</access>
   <addressBlock>
    <offset>0x0</offset>
    <size>0x105c</size>
    <usage>registers</usage>
   </addressBlock>
   <registers>
    <register>
     <name>gmacgrp_MAC_Configuration</name>
     <description>
The MAC Configuration register establishes receive and transmit operating modes.</description>
     <addressOffset>0x0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>prelen</name>
       <description>These bits control the number of preamble bytes that are added to the beginning of every Transmit frame. The preamble reduction occurs only when the MAC is operating </description>
       <lsb>0</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_prelen_enum</name>
         <enumeratedValue>
          <name>pream7bytes</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pream5bytes</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pream3bytes</name>
          <value>2</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>re</name>
       <description>When this bit is set, the receiver state machine of the MAC is enabled for receiving frames from the GMII or MII. When this bit is reset, the MAC receive state machine is disabled after the completion of the reception of the current frame, and does not receive any further frames from the GMII or MII.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_re_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>te</name>
       <description>When this bit is set, the transmit state machine of the MAC is enabled for transmission on the GMII or MII. When this bit is reset, the MAC transmit state machine is disabled after the completion of the transmission of the current frame, and does not transmit any further frames.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_te_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dc</name>
       <description>When this bit is set, the deferral check function is enabled in the MAC. The MAC issues a Frame Abort status, along with the excessive deferral error bit set in the transmit frame status, when the transmit state machine is deferred for more than 24,288 bit times in the 10 or 100 Mbps mode. If the MAC is configured for 1000 Mbps operation, or if the Jumbo frame mode is enabled in the 10 or 100 Mbps mode, the threshold for deferral is 155,680 bits times. Deferral begins when the transmitter is ready to transmit, but is prevented because of an active carrier sense signal (CRS) on GMII or MII. Defer time is not cumulative. When the transmitter defers for 10,000 bit times, it transmits, collides, backs off, and then defers again after completion of back-off. The deferral timer resets to 0 and restarts.

When this bit is reset, the deferral check function is disabled and the MAC defers until the CRS signal goes inactive. This bit is applicable only in the half-duplex mode.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_dc_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>bl</name>
       <description>The Back-Off limit determines the random integer number (r) of slot time delays (4,096 bit times for 1000 Mbps and 512 bit times for 10/100 Mbps) for which the MAC waits before rescheduling a transmission attempt during retries after a collision. This bit is applicable only in the half-duplex mode.
 * 00: k = min (n, 10)
 * 01: k = min (n, 8)
 * 10: k = min (n, 4)
 * 11: k = min (n, 1)
 
where &lt;i&gt; n &lt;/i&gt;= retransmission attempt. The random integer &lt;i&gt; r &lt;/i&gt; takes the value in the
range 0 &lt;= r &lt; kth power of 2</description>
       <lsb>5</lsb>
       <msb>6</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_bl_enum</name>
         <enumeratedValue>
          <name>backlimtr10</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>backlimirt8</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>backlimitr4</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>backlimitr1</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>acs</name>
       <description>When this bit is set, the MAC strips the Pad or FCS field on the incoming frames only if the value of the length field is less than 1,536 bytes. All received frames with length field greater than or equal to 1,536 bytes are passed to the application without stripping the Pad or FCS field. 

When this bit is reset, the MAC passes all incoming frames, without modifying them, to the Host.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_acs_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lud</name>
       <description>This bit indicates whether the link is up or down during the transmission of configuration in the RGMII, SGMII, or SMII interface</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_lud_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dr</name>
       <description>When this bit is set, the MAC attempts only one transmission. When a collision occurs on the GMII or MII interface, the MAC ignores the current frame transmission and reports a Frame Abort with excessive collision error in the transmit frame status. 

When this bit is reset, the MAC attempts retries based on the settings of the BL field (Bits [6:5]). This bit is applicable only in the half-duplex mode.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_dr_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ipc</name>
       <description>When this bit is set, the MAC calculates the 16-bit ones complement of the ones complement sum of all received Ethernet frame payloads. It also checks whether the IPv4 Header checksum (assumed to be bytes 2526 or 2930 (VLAN-tagged) of the received Ethernet frame) is correct for the received frame and gives the status in the receive status word. The MAC also appends the 16-bit checksum calculated for the IP header datagram payload (bytes after the IPv4 header) and appends it to the Ethernet frame transferred to the application (when Type 2 COE is deselected).

When this bit is reset, this function is disabled. 

When Type 2 COE is selected, this bit, when set, enables the IPv4 header checksum checking and IPv4 or IPv6 TCP, UDP, or ICMP payload checksum checking. When this bit is reset, the COE function in the receiver is disabled and the corresponding PCE and IP HCE status bits are always cleared.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_ipc_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dm</name>
       <description>When this bit is set, the MAC operates in the full-duplex mode where it can transmit and receive simultaneously.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_dm_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lm</name>
       <description>When this bit is set, the MAC operates in the loopback mode at GMII or MII. The (G)MII Receive clock input is required for the loopback to work properly, because the Transmit clock is not looped-back internally.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_lm_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>do</name>
       <description>When this bit is set, the MAC disables the reception of frames when the gmii_txen_o is asserted in the half-duplex mode. 
When this bit is reset, the MAC receives all packets that are given by the PHY while transmitting.

This bit is not applicable if the MAC is operating in the full-duplex mode.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_do_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>fes</name>
       <description>This bit selects the speed in the RMII/RGMII interface:
 * 0: 10 Mbps
 * 1: 100 Mbps
This bit generates link speed encoding when TC (Bit 24) is set in the RGMII, SMII, or SGMII mode.
</description>
       <lsb>14</lsb>
       <msb>14</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_fes_enum</name>
         <enumeratedValue>
          <name>speed10</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>speed100</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ps</name>
       <description>This bit selects between GMII and MII</description>
       <lsb>15</lsb>
       <msb>15</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_ps_enum</name>
         <enumeratedValue>
          <name>gmii1000sel</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>mii10100sel</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dcrs</name>
       <description>When set high, this bit makes the MAC transmitter ignore the (G)MII CRS signal during frame transmission in the half-duplex mode. This request results in no errors generated because of Loss of Carrier or No Carrier during such transmission. When this bit is low, the MAC transmitter generates such errors because of Carrier Sense and can even abort the transmissions.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_dcrs_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ifg</name>
       <description>These bits control the minimum IFG between frames during transmission.
In the half-duplex mode, the minimum IFG can be configured only for 64 bit times (IFG = 100). Lower values are not considered. In the 1000-Mbps mode, the minimum IFG supported is 80 bit times (and above).</description>
       <lsb>17</lsb>
       <msb>19</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_ifg_enum</name>
         <enumeratedValue>
          <name>ifg96bittimes</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg88bittimes</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg80bittimes</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg72bittimes</name>
          <value>3</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg64bittimes</name>
          <value>4</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg56bittimes</name>
          <value>5</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg48bittimes</name>
          <value>6</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ifg40bittimes</name>
          <value>7</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>je</name>
       <description>When this bit is set, the MAC allows Jumbo frames of 9,018 bytes (9,022 bytes for VLAN tagged frames) without reporting a giant frame error in the receive frame status.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_je_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>be</name>
       <description>When this bit is set, the MAC allows frame bursting during transmission in the GMII half-duplex mode.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_be_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>jd</name>
       <description>When this bit is set, the MAC disables the jabber timer on the transmitter. The MAC can transfer frames of up to 16,384 bytes.
When this bit is reset, the MAC cuts off the transmitter if the application sends out more than 2,048 bytes of data (10,240 if JE is set high) during transmission.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_jd_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>wd</name>
       <description>When this bit is set, the MAC disables the watchdog timer on the receiver. The MAC can receive frames of up to 16,384 bytes. 

When this bit is reset, the MAC does not allow more than 2,048 bytes (10,240 if JE is set high) of the frame being received. The MAC cuts off any bytes received after 2,048 bytes.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_wd_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tc</name>
       <description>When set, this bit enables the transmission of duplex mode, link speed, and link up or down information to the PHY in the RGMII. When this bit is reset, no such information is driven to the PHY.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_tc_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>cst</name>
       <description>When set, the last 4 bytes (FCS) of all frames of Ether type (type field greater than 0x0600) are stripped and dropped before forwarding the frame to the application. This function is not valid when the IP Checksum Engine (Type 1) is enabled in the MAC receiver.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Configuration_cst_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>twokpe</name>
       <description>When set, the MAC considers all frames, with up to 2,000 bytes length, as normal packets. When Bit 20 (Jumbo Enable) is not set, the MAC considers all received frames of size more than 2K bytes as Giant frames.
When this bit is reset and Bit 20 (Jumbo Enable) is not set, the MAC considers all received frames of size more than 1,518 bytes (1,522 bytes for tagged) as Giant frames.

When Bit 20 (Jumbo Enable) is set, setting this bit has no effect on Giant Frame status.</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Frame_Filter</name>
     <description>
The MAC Frame Filter register contains the filter controls for receiving frames. Some of the controls from this register go to the address check block of the MAC, which performs the first level of address filtering. The second level of filtering is performed on the incoming frame, based on other controls such as Pass Bad Frames and Pass Control Frames.</description>
     <addressOffset>0x4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>pr</name>
       <description>When this bit is set, the Address Filter block passes all incoming frames regardless of its destination or source address. The SA or DA Filter Fails status bits of the Receive Status Word are always cleared when PR is set.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_pr_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>huc</name>
       <description>When set, MAC performs destination address filtering of unicast frames according to the hash table.

When reset, the MAC performs a perfect destination address filtering for unicast frames, that is, it compares the DA field with the values programmed in DA registers.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_huc_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>hmc</name>
       <description>When set, MAC performs destination address filtering of received multicast frames according to the hash table.

When reset, the MAC performs a perfect destination address filtering for multicast frames, that is, it compares the DA field with the values programmed in DA registers.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_hmc_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>daif</name>
       <description>When this bit is set, the Address Check block operates in inverse filtering mode for the DA address comparison for both unicast and multicast frames.

When reset, normal filtering of frames is performed.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_daif_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pm</name>
       <description>When set, this bit indicates that all received frames with a multicast destination address (first bit in the destination address field is '1') are passed. 

When reset, filtering of multicast frame depends on HMC bit.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_pm_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dbf</name>
       <description>When this bit is set, the AFM block filters all incoming broadcast frames. In addition, it overrides all other filter settings. 

When this bit is reset, the AFM block passes all received broadcast frames.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_dbf_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pcf</name>
       <description>These bits control the forwarding of all control frames (including unicast and multicast PAUSE frames). 
 * 00: MAC filters all control frames from reaching the application.
 * 01: MAC forwards all control frames except PAUSE control frames to application even if they fail the Address filter. 
 * 10: MAC forwards all control frames to application even if they fail the Address Filter.
 * 11: MAC forwards control frames that pass the Address Filter.
The following conditions should be true for the PAUSE control frames processing:
 * Condition 1: The MAC is in the full-duplex mode and flow control is enabled by setting Bit 2 (RFE) of Register 6 (Flow Control Register) to 1.
 * Condition 2: The destination address (DA) of the received frame matches the special multicast address or the MAC Address 0 when Bit 3 (UP) of the Register 6 (Flow Control Register) is set.
 * Condition 3: The Type field of the received frame is 0x8808 and the OPCODE field is 0x0001.

This field should be set to 01 only when the Condition 1 is true, that is, the MAC is programmed to operate in the full-duplex mode and the RFE bit is enabled. Otherwise, the PAUSE frame filtering may be inconsistent. When Condition 1 is false, the PAUSE frames are considered as generic control frames. Therefore, to pass all control frames (including PAUSE control frames) when the full-duplex mode and flow control is not enabled, you should set the PCF field to 10 or 11 (as required by the application).</description>
       <lsb>6</lsb>
       <msb>7</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_pcf_enum</name>
         <enumeratedValue>
          <name>macfltallcfr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>macfwdxpause</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>macfwdfail</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>macfwdpass</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>saif</name>
       <description>When this bit is set, the Address Check block operates in inverse filtering mode for the SA address comparison. The frames whose SA matches the SA registers are marked as failing the SA Address filter. 

When this bit is reset, frames whose SA does not match the SA registers are marked as failing the SA Address filter.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_saif_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>saf</name>
       <description>When this bit is set, the MAC compares the SA field of the received frames with the values programmed in the enabled SA registers. If the comparison matches, then the SA Match bit of RxStatus Word is set high. When this bit is set high and the SA filter fails, the MAC drops the frame. 

When this bit is reset, the MAC forwards the received frame to the application and with the updated SA Match bit of the RxStatus depending on the SA address comparison.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_saf_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>hpf</name>
       <description>When this bit is set, it configures the address filter to pass a frame if it matches either the perfect filtering or the hash filtering as set by the HMC or HUC bits. 

When this bit is low and the HUC or HMC bit is set, the frame is passed only if it matches the Hash filter.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_hpf_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>vtfe</name>
       <description>When set, this bit enables the MAC to drop VLAN tagged frames that do not match the VLAN Tag comparison. 

When reset, the MAC forwards all frames irrespective of the match status of the VLAN Tag.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_vtfe_enum</name>
         <enumeratedValue>
          <name>nodrop</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>drop</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ipfe</name>
       <description>When set, this bit enables the MAC to drop frames that do not match the enabled Layer 3 and Layer 4 filters. If Layer 3 or Layer 4 filters are not enabled for matching, this bit does not have any effect.

When reset, the MAC forwards all frames irrespective of the match status of the Layer 3 and Layer 4 filters.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_ipfe_enum</name>
         <enumeratedValue>
          <name>nodrop</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>drop</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dntu</name>
       <description>When set, this bit enables the MAC to drop the non-TCP or UDP over IP frames. The MAC forward only those frames that are processed by the Layer 4 filter. 

When reset, this bit enables the MAC to forward all non-TCP or UDP over IP frames.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_dntu_enum</name>
         <enumeratedValue>
          <name>nodrop</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>drop</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ra</name>
       <description>When this bit is set, the MAC Receiver block passes all received frames, irrespective of whether they pass the address filter or not, to the Application. The result of the SA or DA filtering is updated (pass or fail) in the corresponding bits in the Receive Status Word. 

When this bit is reset, the Receiver block passes only those frames to the Application that pass the SA or DA address filter.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Frame_Filter_ra_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_GMII_Address</name>
     <description>
The GMII Address register controls the management cycles to the external PHY through the management interface.</description>
     <addressOffset>0x10</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>gb</name>
       <description>This bit should read logic 0 before writing to Register 4 and Register 5. During a PHY or RevMII register access, the software sets this bit to 1'b1 to indicate that a Read or Write access is in progress.

The Register 5 is invalid until this bit is cleared by the MAC. Therefore, Register 5 (GMII Data) should be kept valid until the MAC clears this bit during a PHY Write operation. Similarly for a read operation, the contents of Register 5 are not valid until this bit is cleared.

The subsequent read or write operation should happen only after the previous operation is complete. Because there is no acknowledgment from the PHY to MAC after a read or write operation is completed, there is no change in the functionality of this bit even when the PHY is not present.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_GMII_Address_gb_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>gw</name>
       <description>When set, this bit indicates to the PHY or RevMII that this is a Write operation using the GMII Data register. If this bit is not set, it indicates that this is a Read operation, that is, placing the data in the GMII Data register.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_GMII_Address_gw_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>cr</name>
       <description>The CSR Clock Range selection determines the frequency of the MDC clock according to the l3_sp_clk frequency used in your design. The suggested range of l3_sp_clk frequency applicable for each value (when Bit[5] = 0) ensures that the MDC clock is approximately between the frequency range 1.0 MHz - 2.5 MHz.
 
When Bit 5 is set, you can achieve MDC clock of frequency higher than the IEEE 802.3 specified frequency limit of 2.5 MHz and program a clock divider of lower value. For example, when l3_sp_clk is of 100 MHz frequency and you program these bits as 1010, then the resultant MDC clock is of 12.5 MHz which is outside the limit of IEEE 802.3 specified range. Only use the values larger than 7 if the interfacing chips support faster MDC clocks.</description>
       <lsb>2</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_GMII_Address_cr_enum</name>
         <enumeratedValue>
          <name>div42</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div62</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div16</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div26</name>
          <value>3</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div102</name>
          <value>4</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div124</name>
          <value>5</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div4</name>
          <value>8</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div6</name>
          <value>9</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div8</name>
          <value>10</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div10</name>
          <value>11</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div12</name>
          <value>12</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div14</name>
          <value>13</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div16again</name>
          <value>14</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>div18</name>
          <value>15</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>gr</name>
       <description>These bits select the desired GMII register in the selected PHY device.
For RevMII, these bits select the desired CSR register in the RevMII Registers set.</description>
       <lsb>6</lsb>
       <msb>10</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>pa</name>
       <description>This field indicates which of the 32 possible PHY devices are being accessed.
For RevMII, this field gives the PHY Address of the RevMII block.</description>
       <lsb>11</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_GMII_Data</name>
     <description>
The GMII Data register stores Write data to be written to the PHY register located at the address specified in Register 4 (GMII Address Register). This register also stores the Read data from the PHY register located at the address specified by Register 4.</description>
     <addressOffset>0x14</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>gd</name>
       <description>This field contains the 16-bit data value read from the PHY or RevMII after a Management Read operation or the 16-bit data value to be written to the PHY or RevMII before a Management Write operation.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Flow_Control</name>
     <description>
The Flow Control register controls the generation and reception of the Control (Pause Command) frames by the MAC's Flow control block. A Write to a register with the Busy bit set to '1' triggers the Flow Control block to generate a Pause Control frame. The fields of the control frame are selected as specified in the 802.3x specification, and the Pause Time value from this register is used in the Pause Time field of the control frame. The Busy bit remains set until the control frame is transferred onto the cable. The Host must make sure that the Busy bit is cleared before writing to the register.</description>
     <addressOffset>0x18</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>fca_bpa</name>
       <description>This bit initiates a Pause Control frame in the full-duplex mode and activates the backpressure function in the half-duplex mode if the TFE bit is set. 

In the full-duplex mode, this bit should be read as 1'b0 before writing to the Flow Control register. To initiate a Pause control frame, the Application must set this bit to 1'b1. During a transfer of the Control Frame, this bit continues to be set to signify that a frame transmission is in progress. After the completion of Pause control frame transmission, the MAC resets this bit to 1'b0. The Flow Control register should not be written to until this bit is cleared. 

In the half-duplex mode, when this bit is set (and TFE is set), then backpressure is asserted by the MAC. During backpressure, when the MAC receives a new frame, the transmitter starts sending a JAM pattern resulting in a collision. This control register bit is logically ORed with the mti_flowctrl_i input signal for the backpressure function. When the MAC is configured for the full-duplex mode, the BPA is automatically disabled.
</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Flow_Control_fca_bpa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tfe</name>
       <description>In the full-duplex mode, when this bit is set, the MAC enables the flow control operation to transmit Pause frames. When this bit is reset, the flow control operation in the MAC is disabled, and the MAC does not transmit any Pause frames. 

In half-duplex mode, when this bit is set, the MAC enables the back-pressure operation. When this bit is reset, the back-pressure feature is disabled.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Flow_Control_tfe_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rfe</name>
       <description>When this bit is set, the MAC decodes the received Pause frame and disables its transmitter for a specified (Pause) time. When this bit is reset, the decode function of the Pause frame is disabled.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Flow_Control_rfe_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>up</name>
       <description>When this bit is set, then in addition to the detecting Pause frames with the unique multicast address, the MAC detects the Pause frames with the station's unicast address specified in the MAC Address0 High Register and MAC Address0 Low Register. When this bit is reset, the MAC detects only a Pause frame with the unique multicast address specified in the 802.3x standard.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Flow_Control_up_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>plt</name>
       <description>This field configures the threshold of the PAUSE timer at which the input flow control signal mti_flowctrl_i (or sbd_flowctrl_i) is checked for automatic retransmission of PAUSE Frame. 

The threshold values should be always less than the Pause Time configured in Bits[31:16]. For example, if PT = 100H (256 slot-times), and PLT = 01, then a second PAUSE frame is automatically transmitted if the mti_flowctrl_i signal is asserted at 228 (256 - 28) slot times after the first PAUSE frame is transmitted. 

The slot time is defined as the time taken to transmit 512 bits (64 bytes) on the GMII or MII interface.</description>
       <lsb>4</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Flow_Control_plt_enum</name>
         <enumeratedValue>
          <name>pausetime_4</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pausetime_28</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pausetime_144</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>pausetime_256</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>dzpq</name>
       <description>When this bit is set, it disables the automatic generation of the Zero-Quanta Pause Control frames on the de-assertion of the flow-control signal from the FIFO layer (MTL or external sideband flow control signal sbd_flowctrl_i/mti_flowctrl_i). 
When this bit is reset, normal operation with automatic Zero-Quanta Pause Control frame generation is enabled.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Flow_Control_dzpq_enum</name>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pt</name>
       <description>This field holds the value to be used in the Pause Time field in the transmit control frame. Because the Pause Time bits are double-synchronized to the (G)MII clock domain, then consecutive writes to this register should be performed only after at least four clock cycles in the destination clock domain.</description>
       <lsb>16</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_VLAN_Tag</name>
     <description>
The VLAN Tag register contains the IEEE 802.1Q VLAN Tag to identify the VLAN frames. The MAC compares the 13th and 14th bytes of the receiving frame (Length/Type) with 16'h8100, and the following two bytes are compared with the VLAN tag. If a match occurs, the MAC sets the received VLAN bit in the receive frame status. The legal length of the frame is increased from 1,518 bytes to 1,522 bytes.
Because the VLAN Tag register is double-synchronized to the (G)MII clock domain, then consecutive writes to these register should be performed only after at least four clock cycles in the destination clock domain.</description>
     <addressOffset>0x1c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>vl</name>
       <description>This field contains the 802.1Q VLAN tag to identify the VLAN frames and is compared to the 15th and 16th bytes of the frames being received for VLAN frames. The following list describes the bits of this field:

 * Bits [15:13]: User Priority
 * Bit 12: Canonical Format Indicator (CFI) or Drop Eligible Indicator (DEI)
 * Bits[11:0]: VLAN tag's VLAN Identifier (VID) field 

When the ETV bit is set, only the VID (Bits[11:0]) is used for comparison. 
If VL (VL[11:0] if ETV is set) is all zeros, the MAC does not check the fifteenth and 16th bytes for VLAN tag comparison, and declares all frames with a Type field value of 0x8100 or 0x88a8 as VLAN frames.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>etv</name>
       <description>When this bit is set, a 12-bit VLAN identifier is used for comparing and filtering instead of the complete 16-bit VLAN tag. Bits [11:0] of VLAN tag are compared with the corresponding field in the received VLAN-tagged frame. Similarly, when enabled, only 12 bits of the VLAN tag in the received frame are used for hash-based VLAN filtering. 

When this bit is reset, all 16 bits of the 15th and 16th bytes of the received VLAN frame are used for comparison and VLAN hash filtering.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_VLAN_Tag_etv_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>vtim</name>
       <description>When set, this bit enables the VLAN Tag inverse matching. The frames that do not have matching VLAN Tag are marked as matched.

When reset, this bit enables the VLAN Tag perfect matching. The frames with matched VLAN Tag are marked as matched.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>esvl</name>
       <description>When this bit is set, the MAC transmitter and receiver also consider the S-VLAN (Type = 0x88A8) frames as valid VLAN tagged frames.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>vthm</name>
       <description>When set, the most significant four bits of the VLAN tag's CRC are used to index the content of Register 354 (VLAN Hash Table Register). A value of 1 in the VLAN Hash Table register, corresponding to the index, indicates that the frame matched the VLAN hash table.

When Bit 16 (ETV) is set, the CRC of the 12-bit VLAN Identifier (VID) is used for comparison whereas when ETV is reset, the CRC of the 16-bit VLAN tag is used for comparison.

When reset, the VLAN Hash Match operation is not performed.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Version</name>
     <description>
The Version registers identifies the version of the EMAC. This register contains two bytes: one specified by Synopsys to identify the core release number, and the other specified by Altera.</description>
     <addressOffset>0x20</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x1037</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>snpsver</name>
       <description>Synopsys-defined Version (3.7)</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>userver</name>
       <description>Altera-defined Version</description>
       <lsb>8</lsb>
       <msb>15</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Debug</name>
     <description>
The Debug register gives the status of all main blocks of the transmit and receive data-paths and the FIFOs. An all-zero status indicates that the MAC is in idle state (and FIFOs are empty) and no activity is going on in the data-paths.</description>
     <addressOffset>0x24</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rpests</name>
       <description>When high, this bit indicates that the MAC GMII or MII receive protocol engine is actively receiving data and not in IDLE state.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_rpests_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rfcfcsts</name>
       <description>When high, this field indicates the active state of the small FIFO Read and Write controllers of the MAC Receive Frame Controller Module.</description>
       <lsb>1</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_rfcfcsts_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rwcsts</name>
       <description>When high, this bit indicates that the MTL Rx FIFO Write Controller is active and is transferring a received frame to the FIFO.
</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_rwcsts_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rrcsts</name>
       <description>This field gives the state of the Rx FIFO read Controller</description>
       <lsb>5</lsb>
       <msb>6</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_rrcsts_enum</name>
         <enumeratedValue>
          <name>idle</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>rdframedata</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>rdframestat</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>flushfrds</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxfsts</name>
       <description>This field gives the status of the fill-level of the Rx FIFO.</description>
       <lsb>8</lsb>
       <msb>9</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_rxfsts_enum</name>
         <enumeratedValue>
          <name>rxfifoempty</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>rxfifobellvl</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>rxfifoablvl</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>rxfifofull</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tpests</name>
       <description>When high, this bit indicates that the MAC GMII or MII transmit protocol engine is actively transmitting data and is not in the IDLE state.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_tpests_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tfcsts</name>
       <description>This field indicates the state of the MAC Transmit Frame Controller block</description>
       <lsb>17</lsb>
       <msb>18</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_tfcsts_enum</name>
         <enumeratedValue>
          <name>idle</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>waitifg</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>xtpause</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>xtinfrm</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txpaused</name>
       <description>When high, this bit indicates that the MAC transmitter is in the PAUSE condition (in the full-duplex only mode) and hence does not schedule any frame for transmission.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_txpaused_enum</name>
         <enumeratedValue>
          <name>disable</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>trcsts</name>
       <description>This field indicates the state of the Tx FIFO Read Controller</description>
       <lsb>20</lsb>
       <msb>21</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_trcsts_enum</name>
         <enumeratedValue>
          <name>idle</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>readstate</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>waittxstat</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>wrtxstat</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>twcsts</name>
       <description>When high, this bit indicates that the MTL Tx FIFO Write Controller is active and transferring data to the Tx FIFO.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_twcsts_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txfsts</name>
       <description>When high, this bit indicates that the MTL Tx FIFO is not empty and some data is left for transmission.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_txfsts_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txstsfsts</name>
       <description>When high, this bit indicates that the MTL TxStatus FIFO is full. Therefore, the MTL cannot accept any more frames for transmission.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Debug_txstsfsts_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_LPI_Control_Status</name>
     <description>The LPI Control and Status Register controls the LPI functions and provides the LPI interrupt status. The status bits are cleared when this register is read.</description>
     <addressOffset>0x30</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tlpien</name>
       <description>When set, this bit indicates that the MAC Transmitter has entered the LPI state because of the setting of the LPIEN bit. This bit is cleared by a read into this register.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_tlpien_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tlpiex</name>
       <description>When set, this bit indicates that the MAC transmitter has exited the LPI state after the user has cleared the LPIEN bit and the LPI TW Timer has expired. This bit is cleared by a read into this register.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_tlpiex_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rlpien</name>
       <description>When set, this bit indicates that the MAC Receiver has received an LPI pattern and entered the LPI state. This bit is cleared by a read into this register.

Note: 
This bit may not get set if the MAC stops receiving the LPI pattern for a very short duration, such as, less than 3 clock cycles of l3_sp_clk.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_rlpien_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rlpiex</name>
       <description>When set, this bit indicates that the MAC Receiver has stopped receiving the LPI pattern on the GMII or MII interface, exited the LPI state, and resumed the normal reception. This bit is cleared by a read into this register.

Note: 
This bit may not get set if the MAC stops receiving the LPI pattern for a very short duration, such as, less than 3 clock cycles of l3_sp_clk.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_rlpiex_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tlpist</name>
       <description>When set, this bit indicates that the MAC is transmitting the LPI pattern on the GMII or MII interface.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_tlpist_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rlpist</name>
       <description>When set, this bit indicates that the MAC is receiving the LPI pattern on the GMII or MII interface.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_rlpist_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lpien</name>
       <description>When set, this bit instructs the MAC Transmitter to enter the LPI state. When reset, this bit instructs the MAC to exit the LPI state and resume normal transmission. 

This bit is cleared when the LPITXA bit is set and the MAC exits the LPI state because of the arrival of a new packet for transmission.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_lpien_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pls</name>
       <description>This bit indicates the link status of the PHY. The MAC Transmitter asserts the LPI pattern only when the link status is up (okay) at least for the time indicated by the LPI LS TIMER.
When set, the link is considered to be okay (up) and when reset, the link is considered to be down.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_pls_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>plsen</name>
       <description>This bit enables the link status received on the RGMII receive paths to be used for activating the LPI LS TIMER. 

When set, the MAC uses the link-status bits of Register 54 (SGMII/RGMII/SMII Status Register) and Bit 17 (PLS) for the LPI LS Timer trigger. When cleared, the MAC ignores the link-status bits of Register 54 and takes only the PLS bit.
</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_plsen_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lpitxa</name>
       <description>This bit controls the behavior of the MAC when it is entering or coming out of the LPI mode on the transmit side. This bit is not functional in the GMAC-CORE configuration in which the Tx clock gating is done during the LPI mode. 
If the LPITXA and LPIEN bits are set to 1, the MAC enters the LPI mode only after all outstanding frames (in the core) and pending frames (in the application interface) have been transmitted. The MAC comes out of the LPI mode when the application sends any frame for transmission or the application issues a TX FIFO Flush command. In addition, the MAC automatically clears the LPIEN bit when it exits the LPI state. If TX FIFO Flush is set, in Bit 20 of Register 6 (Operation Mode Register), when the MAC is in the LPI mode, the MAC exits the LPI mode.

When this bit is 0, the LPIEN bit directly controls behavior of the MAC when it is entering or coming out of the LPI mode.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_LPI_Control_Status_lpitxa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_LPI_Timers_Control</name>
     <description>
The LPI Timers Control register controls the timeout values in the LPI states. It specifies the time for which the MAC transmits the LPI pattern and also the time for which the MAC waits before resuming the normal transmission.</description>
     <addressOffset>0x34</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x3e80000</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>twt</name>
       <description>This field specifies the minimum time (in microseconds) for which the MAC waits after it stops transmitting the LPI pattern to the PHY and before it resumes the normal transmission. The TLPIEX status bit is set after the expiry of this timer.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>lst</name>
       <description>This field specifies the minimum time (in milliseconds) for which the link status from the PHY should be up (OKAY) before the LPI pattern can be transmitted to the PHY. The MAC does not transmit the LPI pattern even when the LPIEN bit is set unless the LPI LS Timer reaches the programmed terminal count. The default value of the LPI LS Timer is 1000 (1 sec) as defined in the IEEE standard.</description>
       <lsb>16</lsb>
       <msb>25</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Interrupt_Status</name>
     <description>
The Interrupt Status register identifies the events in the MAC that can generate interrupt. All interrupt events are generated only when the corresponding optional feature is enabled.</description>
     <addressOffset>0x38</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rgsmiiis</name>
       <description>This bit is set because of any change in value of the Link Status of RGMII or SMII interface (Bit 3 in Register 54 (SGMII/RGMII/SMII Status Register)). This bit is cleared when you perform a read operation on the SGMII/RGMII/SMII Status Register.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_rgsmiiis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pcslchgis</name>
       <description>This bit is set because of any change in Link Status in the TBI, RTBI, or SGMII PHY interface (Bit 2 in Register 49 (AN Status Register)). This bit is cleared when you perform a read operation on the AN Status register.
This bit is valid only when you select the SGMII PHY interface during operation.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>pcsancis</name>
       <description>This bit is set when the Auto-negotiation is completed in the TBI, RTBI, or SGMII PHY interface (Bit 5 in Register 49 (AN Status Register)). This bit is cleared when you perform a read operation to the AN Status register.

This bit is valid only when you select the SGMII PHY interface during operation.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>mmcis</name>
       <description>This bit is set high when any of the Bits [7:5] is set high and cleared only when all of these bits are low.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_mmcis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mmcrxis</name>
       <description>This bit is set high when an interrupt is generated in the MMC Receive Interrupt Register. This bit is cleared when all the bits in this interrupt register are cleared.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_mmcrxis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mmctxis</name>
       <description>This bit is set high when an interrupt is generated in the MMC Transmit Interrupt Register. This bit is cleared when all the bits in this interrupt register are cleared.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_mmctxis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mmcrxipis</name>
       <description>This bit is set high when an interrupt is generated in the MMC Receive Checksum Offload Interrupt Register. This bit is cleared when all the bits in this interrupt register are cleared.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_mmcrxipis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsis</name>
       <description>This bit is set when any of the following conditions is true:
 * The system time value equals or exceeds the value specified in the Target Time High and Low registers.
 * There is an overflow in the seconds register.
 * The Auxiliary snapshot trigger is asserted.
This bit is cleared on reading Bit 0 of the Register 458 (Timestamp Status Register). 

When set, this bit indicates that the system time value is equal to or exceeds the value specified in the Target Time registers. In this mode, this bit is cleared after the completion of the read of this bit. In all other modes, this bit is reserved.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_tsis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lpiis</name>
       <description>This bit is set for any LPI state entry or exit in the MAC Transmitter or Receiver. This bit is cleared on reading Bit 0 of Register 12 (LPI Control and Status Register). In all other modes, this bit is reserved.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Status_lpiis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Interrupt_Mask</name>
     <description>
The Interrupt Mask Register bits enable you to mask the interrupt signal because of the corresponding event in the Interrupt Status Register. The interrupt signal is sbd_intr_o.</description>
     <addressOffset>0x3c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rgsmiiim</name>
       <description>When set, this bit disables the assertion of the interrupt signal because of the setting of the RGMII or SMII Interrupt Status bit in Register 14 (Interrupt Status Register).</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Mask_rgsmiiim_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>pcslchgim</name>
       <description>When set, this bit disables the assertion of the interrupt signal because of the setting of the PCS Link-status changed bit in Register 14 (Interrupt Status Register).</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>pcsancim</name>
       <description>When set, this bit disables the assertion of the interrupt signal because of the setting of PCS Auto-negotiation complete bit in Register 14 (Interrupt Status Register).
</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>tsim</name>
       <description>When set, this bit disables the assertion of the interrupt signal because of the setting of Timestamp Interrupt Status bit in Register 14 (Interrupt Status Register).</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Mask_tsim_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lpiim</name>
       <description>When set, this bit disables the assertion of the interrupt signal because of the setting of the LPI Interrupt Status bit in Register 14 (Interrupt Status Register).</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Interrupt_Mask_lpiim_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address0_High</name>
     <description>
The MAC Address0 High register holds the upper 16 bits of the first 6-byte MAC address of the station. The first DA byte that is received on the (G)MII interface corresponds to the LS byte (Bits [7:0]) of the MAC Address Low register. For example, if 0x112233445566 is received (0x11 in lane 0 of the first column) on the (G)MII as the destination address, then the MacAddress0 Register [47:0] is compared with 0x665544332211.

Because the MAC address registers are double-synchronized to the (G)MII clock domains, then the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address0 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.</description>
     <addressOffset>0x40</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x8000ffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the first 6-byte MAC address. The MAC uses this field for filtering the received frames and inserting the MAC address in the Transmit Flow Control (PAUSE) Frames.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>ae</name>
       <description>This bit is always set to 1.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address0_Low</name>
     <description>
The MAC Address0 Low register holds the lower 32 bits of the first 6-byte MAC address of the station.</description>
     <addressOffset>0x44</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the first 6-byte MAC address. This is used by the MAC for filtering the received frames and inserting the MAC address in the Transmit Flow Control (PAUSE) Frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address1_High</name>
     <description>The MAC Address1 High register holds the upper 16 bits of the 2nd 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address1 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x48</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 2nd 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address1 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address1 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address1 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address1 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address1 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address1 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address1[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address1[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 2nd MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address1_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address1_Low</name>
     <description>The MAC Address1 Low register holds the lower 32 bits of the 2nd 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x4c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 2nd 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address2_High</name>
     <description>The MAC Address2 High register holds the upper 16 bits of the 3rd 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address2 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x50</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 3rd 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address2 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address2 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address2 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address2 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address2 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address2 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address2[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address2[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 3rd MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address2_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address2_Low</name>
     <description>The MAC Address2 Low register holds the lower 32 bits of the 3rd 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x54</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 3rd 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address3_High</name>
     <description>The MAC Address3 High register holds the upper 16 bits of the 4th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address3 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x58</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 4th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address3 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address3 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address3 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address3 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address3 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address3 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address3[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address3[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 4th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address3_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address3_Low</name>
     <description>The MAC Address3 Low register holds the lower 32 bits of the 4th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x5c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 4th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address4_High</name>
     <description>The MAC Address4 High register holds the upper 16 bits of the 5th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address4 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x60</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 5th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address4 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address4 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address4 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address4 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address4 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address4 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address4[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address4[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 5th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address4_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address4_Low</name>
     <description>The MAC Address4 Low register holds the lower 32 bits of the 5th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x64</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 5th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address5_High</name>
     <description>The MAC Address5 High register holds the upper 16 bits of the 6th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address5 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x68</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 6th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address5 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address5 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address5 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address5 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address5 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address5 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address5[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address5[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 6th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address5_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address5_Low</name>
     <description>The MAC Address5 Low register holds the lower 32 bits of the 6th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x6c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 6th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address6_High</name>
     <description>The MAC Address6 High register holds the upper 16 bits of the 7th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address6 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x70</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 7th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address6 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address6 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address6 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address6 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address6 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address6 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address6[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address6[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 7th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address6_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address6_Low</name>
     <description>The MAC Address6 Low register holds the lower 32 bits of the 7th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x74</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 7th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address7_High</name>
     <description>The MAC Address7 High register holds the upper 16 bits of the 8th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address7 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x78</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 8th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address7 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address7 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address7 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address7 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address7 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address7 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address7[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address7[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 8th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address7_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address7_Low</name>
     <description>The MAC Address7 Low register holds the lower 32 bits of the 8th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x7c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 8th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address8_High</name>
     <description>The MAC Address8 High register holds the upper 16 bits of the 9th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address8 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x80</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 9th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address8 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address8 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address8 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address8 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address8 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address8 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address8[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address8[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 9th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address8_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address8_Low</name>
     <description>The MAC Address8 Low register holds the lower 32 bits of the 9th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x84</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 9th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address9_High</name>
     <description>The MAC Address9 High register holds the upper 16 bits of the 10th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address9 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x88</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 10th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address9 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address9 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address9 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address9 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address9 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address9 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address9[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address9[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 10th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address9_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address9_Low</name>
     <description>The MAC Address9 Low register holds the lower 32 bits of the 10th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 10th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address10_High</name>
     <description>The MAC Address10 High register holds the upper 16 bits of the 11th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address10 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x90</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 11th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address10 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address10 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address10 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address10 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address10 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address10 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address10[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address10[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 11th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address10_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address10_Low</name>
     <description>The MAC Address10 Low register holds the lower 32 bits of the 11th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x94</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 11th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address11_High</name>
     <description>The MAC Address11 High register holds the upper 16 bits of the 12th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address11 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x98</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 12th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address11 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address11 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address11 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address11 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address11 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address11 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address11[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address11[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 12th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address11_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address11_Low</name>
     <description>The MAC Address11 Low register holds the lower 32 bits of the 12th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x9c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 12th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address12_High</name>
     <description>The MAC Address12 High register holds the upper 16 bits of the 13th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address12 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0xa0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 13th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address12 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address12 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address12 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address12 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address12 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address12 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address12[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address12[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 13th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address12_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address12_Low</name>
     <description>The MAC Address12 Low register holds the lower 32 bits of the 13th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0xa4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 13th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address13_High</name>
     <description>The MAC Address13 High register holds the upper 16 bits of the 14th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address13 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0xa8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 14th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address13 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address13 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address13 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address13 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address13 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address13 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address13[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address13[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 14th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address13_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address13_Low</name>
     <description>The MAC Address13 Low register holds the lower 32 bits of the 14th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0xac</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 14th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address14_High</name>
     <description>The MAC Address14 High register holds the upper 16 bits of the 15th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address14 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0xb0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 15th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address14 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address14 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address14 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address14 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address14 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address14 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address14[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address14[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 15th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address14_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address14_Low</name>
     <description>The MAC Address14 Low register holds the lower 32 bits of the 15th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0xb4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 15th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address15_High</name>
     <description>The MAC Address15 High register holds the upper 16 bits of the 16th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address15 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0xb8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 16th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address15 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address15 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address15 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address15 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address15 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address15 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address15[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address15[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 16th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address15_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address15_Low</name>
     <description>The MAC Address15 Low register holds the lower 32 bits of the 16th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0xbc</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 16th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_SGMII_RGMII_SMII_Control_Status</name>
     <description>
The SGMII/RGMII/SMII Status register indicates the status signals received by the RGMII interface (selected at reset) from the PHY.</description>
     <addressOffset>0xd8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>lnkmod</name>
       <description>This bit indicates the current mode of operation of the link</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_SGMII_RGMII_SMII_Control_Status_lnkmod_enum</name>
         <enumeratedValue>
          <name>halfdup</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>fulldup</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lnkspeed</name>
       <description>This bit indicates the current speed of the link. Bit 2 is reserved when the MAC is configured for the SMII PHY interface.</description>
       <lsb>1</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_SGMII_RGMII_SMII_Control_Status_lnkspeed_enum</name>
         <enumeratedValue>
          <name>speed2point5MHz</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>speed25MHz</name>
          <value>1</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>speed125MHz</name>
          <value>2</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>lnksts</name>
       <description>This bit indicates whether the link is up (1'b1) or down (1'b0).</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_SGMII_RGMII_SMII_Control_Status_lnksts_enum</name>
         <enumeratedValue>
          <name>linkdown</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>linkup</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_Control</name>
     <description>
The MMC Control register establishes the operating mode of the management counters.

Note:
The bit 0 (Counters Reset) has higher priority than bit 4 (Counter Preset). Therefore, when the Software tries to set both bits in the same write cycle, all counters are cleared and the bit 4 is not set.</description>
     <addressOffset>0x100</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cntrst</name>
       <description>When this bit is set, all counters are reset. This bit is cleared automatically after one clock cycle.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Control_cntrst_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>cntstopro</name>
       <description>When this bit is set, after reaching maximum value, the counter does not roll over to zero.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Control_cntstopro_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rstonrd</name>
       <description>When this bit is set, the MMC counters are reset to zero after Read (self-clearing after reset). The counters are cleared when the least significant byte lane (bits[7:0]) is read.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Control_rstonrd_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>cntfreez</name>
       <description>When this bit is set, it freezes all MMC counters to their current value. Until this bit is reset to 0, no MMC counter is updated because of any transmitted or received frame. If any MMC counter is read with the Reset on Read bit set, then that counter is also cleared in this mode.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Control_cntfreez_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>cntprst</name>
       <description>When this bit is set, all counters are initialized or preset to almost full or almost half according to bit 5. This bit is cleared automatically after 1 clock cycle. This bit, along with bit 5, is useful for debugging and testing the assertion of interrupts because of MMC counter becoming half-full or full.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Control_cntprst_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>cntprstlvl</name>
       <description>When low and bit 4 is set, all MMC counters get preset to almost-half value. All octet counters get preset to 0x7FFF_F800 (half - 2KBytes) and all frame-counters gets preset to 0x7FFF_FFF0 (half - 16).
When this bit is high and bit 4 is set, all MMC counters get preset to almost-full value. All octet counters get preset to 0xFFFF_F800 (full - 2KBytes) and all frame-counters gets preset to 0xFFFF_FFF0 (full - 16).
For 16-bit counters, the almost-half preset values are 0x7800 and 0x7FF0 for the respective octet and frame counters. Similarly, the almost-full preset values for the 16-bit counters are 0xF800 and 0xFFF0.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Control_cntprstlvl_enum</name>
         <enumeratedValue>
          <name>almosthalf</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>almostfull</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ucdbc</name>
       <description>When set, this bit enables MAC to update all the related MMC Counters for Broadcast frames dropped due to setting of DBF bit (Disable Broadcast Frames) of MAC Filter Register at offset 0x0004.
When reset, MMC Counters are not updated for dropped Broadcast frames.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_Receive_Interrupt</name>
     <description>The MMC Receive Interrupt register maintains the interrupts that are generated when the following happens:
 * Receive statistic counters reach half of their maximum values (0x8000_0000 for 32-bit counter and 0x8000 for 16-bit counter).
 * Receive statistic counters cross their maximum values (0xFFFF_FFFF for 32-bit counter and 0xFFFF for 16-bit counter). 
When the Counter Stop Rollover is set, then interrupts are set but the counter remains at all-ones. The MMC Receive Interrupt register is a 32-bit wide register. An interrupt bit is cleared when the respective MMC counter that caused the interrupt is read. The least significant byte lane (Bits[7:0]) of the respective counter must be read in order to clear the interrupt bit.</description>
     <addressOffset>0x104</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rxgbfrmis</name>
       <description>This bit is set when the rxframecount_bg counter reaches half of the maximum value or the maximum value.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxgbfrmis_enum</name>
         <enumeratedValue>
          <name>almosthalf</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>almostfull</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxgboctis</name>
       <description>This bit is set when the rxoctetcount_bg counter reaches half of the maximum value or the maximum value.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxgboctis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxgoctis</name>
       <description>This bit is set when the rxoctetcount_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxgoctis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxbcgfis</name>
       <description>This bit is set when the rxbroadcastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>rxmcgfis</name>
       <description>This bit is set when the rxmulticastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxmcgfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxcrcerfis</name>
       <description>This bit is set when the rxcrcerror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxcrcerfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxalgnerfis</name>
       <description>This bit is set when the rxalignmenterror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxalgnerfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxruntfis</name>
       <description>This bit is set when the rxrunterror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxruntfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxjaberfis</name>
       <description>This bit is set when the rxjabbererror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxjaberfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxusizegfis</name>
       <description>This bit is set when the rxundersize_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxusizegfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxosizegfis</name>
       <description>This bit is set when the rxoversize_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxosizegfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx64octgbfis</name>
       <description>This bit is set when the rx64octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rx64octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx65t127octgbfis</name>
       <description>This is set when the rx65to127octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rx65t127octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx128t255octgbfis</name>
       <description>This bit is set when the rx128to255octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rx128t255octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx256t511octgbfis</name>
       <description>This bit is set when the rx256to511octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>14</lsb>
       <msb>14</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rx256t511octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx512t1023octgbfis</name>
       <description>This bit is set when the rx512to1023octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>15</lsb>
       <msb>15</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rx512t1023octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx1024tmaxoctgbfis</name>
       <description>This bit is set when the rx1024tomaxoctets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rx1024tmaxoctgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxucgfis</name>
       <description>This bit is set when the rxunicastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxucgfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxlenerfis</name>
       <description>This bit is set when the rxlengtherror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxlenerfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxorangefis</name>
       <description>This bit is set when the rxoutofrangetype counter reaches half of the maximum value or the maximum value.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxorangefis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxpausfis</name>
       <description>This bit is set when the rxpauseframe counter reaches half of the maximum value or the maximum value.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxpausfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxfovfis</name>
       <description>This bit is set when the rxfifooverflow counter reaches half of the maximum value or the maximum value.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxfovfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxvlangbfis</name>
       <description>This bit is set when the rxvlanframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxvlangbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxwdogfis</name>
       <description>This bit is set when the rxwatchdogerror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_rxwdogfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxrcverrfis</name>
       <description>This bit is set when the rxrcverror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>rxctrlfis</name>
       <description>This bit is set when the rxctrlframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_Transmit_Interrupt</name>
     <description>
The MMC Transmit Interrupt register maintains the interrupts generated when transmit statistic counters reach half of their maximum values (0x8000_0000 for 32-bit counter and 0x8000 for 16-bit counter), and the maximum values (0xFFFF_FFFF for 32-bit counter and 0xFFFF for 16-bit counter). When Counter Stop Rollover is set, then interrupts are set but the counter remains at all-ones. The MMC Transmit Interrupt register is a 32-bit wide register. An interrupt bit is cleared when the respective MMC counter that caused the interrupt is read. The least significant byte lane (Bits[7:0]) of the respective counter must be read in order to clear the interrupt bit.</description>
     <addressOffset>0x108</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>txgboctis</name>
       <description>This bit is set when the txoctetcount_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txgboctis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txgbfrmis</name>
       <description>This bit is set when the txframecount_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txgbfrmis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txbcgfis</name>
       <description>This bit is set when the txbroadcastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txbcgfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txmcgfis</name>
       <description>This bit is set when the txmulticastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txmcgfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx64octgbfis</name>
       <description>This bit is set when the tx64octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_tx64octgbfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx65t127octgbfis</name>
       <description>This bit is set when the tx65to127octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_tx65t127octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx128t255octgbfis</name>
       <description>This bit is set when the tx128to255octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_tx128t255octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx256t511octgbfis</name>
       <description>This bit is set when the tx256to511octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_tx256t511octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx512t1023octgbfis</name>
       <description>This bit is set when the tx512to1023octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_tx512t1023octgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx1024tmaxoctgbfis</name>
       <description>This bit is set when the tx1024tomaxoctets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_tx1024tmaxoctgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txucgbfis</name>
       <description>This bit is set when the txunicastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txucgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txmcgbfis</name>
       <description>This bit is set when the txmulticastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txmcgbfis_enum</name>
         <enumeratedValue>
          <name>inactive</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>active</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txbcgbfis</name>
       <description>This bit is set when the txbroadcastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txbcgbfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txuflowerfis</name>
       <description>This bit is set when the txunderflowerror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txuflowerfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txscolgfis</name>
       <description>This bit is set when the txsinglecol_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>14</lsb>
       <msb>14</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txscolgfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txmcolgfis</name>
       <description>This bit is set when the txmulticol_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>15</lsb>
       <msb>15</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txmcolgfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txdeffis</name>
       <description>This bit is set when the txdeferred counter reaches half of the maximum value or the maximum value.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txdeffis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txlatcolfis</name>
       <description>This bit is set when the txlatecol counter reaches half of the maximum value or the maximum value.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txlatcolfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txexcolfis</name>
       <description>This bit is set when the txexcesscol counter reaches half of the maximum value or the maximum value.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txexcolfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txcarerfis</name>
       <description>This bit is set when the txcarriererror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txcarerfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txgoctis</name>
       <description>This bit is set when the txoctetcount_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txgoctis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txgfrmis</name>
       <description>This bit is set when the txframecount_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txgfrmis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txexdeffis</name>
       <description>This bit is set when the txexcessdef counter reaches half of the maximum value or the maximum value.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txexdeffis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txpausfis</name>
       <description>This bit is set when the txpauseframeserror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txpausfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txvlangfis</name>
       <description>This bit is set when the txvlanframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_txvlangfis_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txosizegfis</name>
       <description>This bit is set when the txoversize_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_Receive_Interrupt_Mask</name>
     <description>The MMC Receive Interrupt Mask register maintains the masks for the interrupts generated when the receive statistic counters reach half of their maximum value, or maximum value. This register is 32-bits wide.</description>
     <addressOffset>0x10c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rxgbfrmim</name>
       <description>Setting this bit masks the interrupt when the rxframecount_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxgboctim</name>
       <description>Setting this bit masks the interrupt when the rxoctetcount_gb counter reaches half of the maximum value or the maximum value.
</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxgoctim</name>
       <description>Setting this bit masks the interrupt when the rxoctetcount_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxbcgfim</name>
       <description>Setting this bit masks the interrupt when the rxbroadcastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxmcgfim</name>
       <description>Setting this bit masks the interrupt when the rxmulticastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxcrcerfim</name>
       <description>Setting this bit masks the interrupt when the rxcrcerror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxalgnerfim</name>
       <description>Setting this bit masks the interrupt when the rxalignmenterror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxruntfim</name>
       <description>Setting this bit masks the interrupt when the rxrunterror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxjaberfim</name>
       <description>Setting this bit masks the interrupt when the rxjabbererror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxusizegfim</name>
       <description>Setting this bit masks the interrupt when the rxundersize_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxosizegfim</name>
       <description>Setting this bit masks the interrupt when the rxoversize_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx64octgbfim</name>
       <description>Setting this bit masks the interrupt when the rx64octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx65t127octgbfim</name>
       <description>Setting this bit masks the interrupt when the rx65to127octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx128t255octgbfim</name>
       <description>Setting this bit masks the interrupt when the rx128to255octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx256t511octgbfim</name>
       <description>Setting this bit masks the interrupt when the rx256to511octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>14</lsb>
       <msb>14</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx512t1023octgbfim</name>
       <description>Setting this bit masks the interrupt when the rx512to1023octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>15</lsb>
       <msb>15</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rx1024tmaxoctgbfim</name>
       <description>Setting this bit masks the interrupt when the rx1024tomaxoctets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxucgfim</name>
       <description>Setting this bit masks the interrupt when the rxunicastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxlenerfim</name>
       <description>Setting this bit masks the interrupt when the rxlengtherror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxorangefim</name>
       <description>Setting this bit masks the interrupt when the rxoutofrangetype counter reaches half of the maximum value or the maximum value.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxpausfim</name>
       <description>Setting this bit masks the interrupt when the rxpauseframes counter reaches half of the maximum value or the maximum value.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxfovfim</name>
       <description>Setting this bit masks the interrupt when the rxfifooverflow counter reaches half of the maximum value or the maximum value.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxvlangbfim</name>
       <description>Setting this bit masks the interrupt when the rxvlanframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxwdogfim</name>
       <description>Setting this bit masks the interrupt when the rxwatchdog counter reaches half of the maximum value or the maximum value.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxrcverrfim</name>
       <description>Setting this bit masks the interrupt when the rxrcverror error counter reaches half the maximum value, and also when it reaches the maximum value.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxctrlfim</name>
       <description>Setting this bit masks the interrupt when the rxctrlframes counter reaches half the maximum value, and also when it reaches the maximum value.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_Transmit_Interrupt_Mask</name>
     <description>
The MMC Transmit Interrupt Mask register maintains the masks for the interrupts generated when the transmit statistic counters reach half of their maximum value or maximum value. This register is 32-bits wide.</description>
     <addressOffset>0x110</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>txgboctim</name>
       <description>Setting this bit masks the interrupt when the txoctetcount_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txgbfrmim</name>
       <description>Setting this bit masks the interrupt when the txframecount_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txbcgfim</name>
       <description>Setting this bit masks the interrupt when the txbroadcastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txmcgfim</name>
       <description>Setting this bit masks the interrupt when the txmulticastframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx64octgbfim</name>
       <description>Setting this bit masks the interrupt when the tx64octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx65t127octgbfim</name>
       <description>Setting this bit masks the interrupt when the tx65to127octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx128t255octgbfim</name>
       <description>Setting this bit masks the interrupt when the tx128to255octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx256t511octgbfim</name>
       <description>Setting this bit masks the interrupt when the tx256to511octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx512t1023octgbfim</name>
       <description>Setting this bit masks the interrupt when the tx512to1023octets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tx1024tmaxoctgbfim</name>
       <description>Setting this bit masks the interrupt when the tx1024tomaxoctets_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txucgbfim</name>
       <description>Setting this bit masks the interrupt when the txunicastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txmcgbfim</name>
       <description>Setting this bit masks the interrupt when the txmulticastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txbcgbfim</name>
       <description>Setting this bit masks the interrupt when the txbroadcastframes_gb counter reaches half of the maximum value or the maximum value.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txuflowerfim</name>
       <description>Setting this bit masks the interrupt when the txunderflowerror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txscolgfim</name>
       <description>Setting this bit masks the interrupt when the txsinglecol_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>14</lsb>
       <msb>14</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txmcolgfim</name>
       <description>Setting this bit masks the interrupt when the txmulticol_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>15</lsb>
       <msb>15</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txdeffim</name>
       <description>Setting this bit masks the interrupt when the txdeferred counter reaches half of the maximum value or the maximum value.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txlatcolfim</name>
       <description>Setting this bit masks the interrupt when the txlatecol counter reaches half of the maximum value or the maximum value.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txexcolfim</name>
       <description>Setting this bit masks the interrupt when the txexcesscol counter reaches half of the maximum value or the maximum value.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txcarerfim</name>
       <description>Setting this bit masks the interrupt when the txcarriererror counter reaches half of the maximum value or the maximum value.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txgoctim</name>
       <description>Setting this bit masks the interrupt when the txoctetcount_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txgfrmim</name>
       <description>Setting this bit masks the interrupt when the txframecount_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txexdeffim</name>
       <description>Setting this bit masks the interrupt when the txexcessdef counter reaches half of the maximum value or the maximum value.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txpausfim</name>
       <description>Setting this bit masks the interrupt when the txpauseframes counter reaches half of the maximum value or the maximum value.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txvlangfim</name>
       <description>Setting this bit masks the interrupt when the txvlanframes_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>txosizegfim</name>
       <description>Setting this bit masks the interrupt when the txoversize_g counter reaches half of the maximum value or the maximum value.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_Transmit_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txoctetcount_gb</name>
     <description>Number of bytes transmitted, exclusive of preamble and retried bytes, in good and bad frames</description>
     <addressOffset>0x114</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes transmitted, exclusive of preamble and retried bytes, in good and bad frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txframecount_gb</name>
     <description>Number of good and bad frames transmitted, exclusive of retried frames</description>
     <addressOffset>0x118</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted, exclusive of retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txbroadcastframes_g</name>
     <description>Number of good broadcast frames transmitted</description>
     <addressOffset>0x11c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good broadcast frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txmulticastframes_g</name>
     <description>Number of good multicast frames transmitted</description>
     <addressOffset>0x120</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good multicast frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_tx64octets_gb</name>
     <description>Number of good and bad frames transmitted with length 64 bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x124</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted with length 64 bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_tx65to127octets_gb</name>
     <description>Number of good and bad frames transmitted with length between 65 and 127 (inclusive) bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x128</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted with length between 65 and 127 (inclusive) bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_tx128to255octets_gb</name>
     <description>Number of good and bad frames transmitted with length between 128 and 255 (inclusive) bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x12c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted with length between 128 and 255 (inclusive) bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_tx256to511octets_gb</name>
     <description>Number of good and bad frames transmitted with length between 256 and 511 (inclusive) bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x130</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted with length between 256 and 511 (inclusive) bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_tx512to1023octets_gb</name>
     <description>Number of good and bad frames transmitted with length between 512 and 1,023 (inclusive) bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x134</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted with length between 512 and 1,023 (inclusive) bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_tx1024tomaxoctets_gb</name>
     <description>Number of good and bad frames transmitted with length between 1,024 and maxsize (inclusive) bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x138</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames transmitted with length between 1,024 and maxsize (inclusive) bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txunicastframes_gb</name>
     <description>Number of good and bad unicast frames transmitted</description>
     <addressOffset>0x13c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad unicast frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txmulticastframes_gb</name>
     <description>Number of good and bad multicast frames transmitted</description>
     <addressOffset>0x140</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad multicast frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txbroadcastframes_gb</name>
     <description>Number of good and bad broadcast frames transmitted</description>
     <addressOffset>0x144</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad broadcast frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txunderflowerror</name>
     <description>Number of frames aborted due to frame underflow error</description>
     <addressOffset>0x148</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames aborted due to frame underflow error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txsinglecol_g</name>
     <description>Number of successfully transmitted frames after a single collision in Half-duplex mode</description>
     <addressOffset>0x14c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of successfully transmitted frames after a single collision in Half-duplex mode</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txmulticol_g</name>
     <description>Number of successfully transmitted frames after more than a single collision in Half-duplex mode</description>
     <addressOffset>0x150</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of successfully transmitted frames after more than a single collision in Half-duplex mode</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txdeferred</name>
     <description>Number of successfully transmitted frames after a deferral in Halfduplex mode</description>
     <addressOffset>0x154</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of successfully transmitted frames after a deferral in Halfduplex mode</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txlatecol</name>
     <description>Number of frames aborted due to late collision error</description>
     <addressOffset>0x158</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames aborted due to late collision error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txexesscol</name>
     <description>Number of frames aborted due to excessive (16) collision errors</description>
     <addressOffset>0x15c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames aborted due to excessive (16) collision errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txcarriererr</name>
     <description>Number of frames aborted due to carrier sense error (no carrier or loss of carrier)</description>
     <addressOffset>0x160</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames aborted due to carrier sense error (no carrier or loss of carrier)</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txoctetcnt</name>
     <description>Number of bytes transmitted, exclusive of preamble, in good frames only</description>
     <addressOffset>0x164</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>txoctetcount_g</name>
       <description>Number of bytes transmitted, exclusive of preamble, in good frames only</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txframecount_g</name>
     <description>Number of good frames transmitted</description>
     <addressOffset>0x168</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txexcessdef</name>
     <description>Number of frames aborted due to excessive deferral error (deferred for more than two max-sized frame times)</description>
     <addressOffset>0x16c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames aborted due to excessive deferral error (deferred for more than two max-sized frame times)</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txpauseframes</name>
     <description>Number of good PAUSE frames transmitted</description>
     <addressOffset>0x170</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good PAUSE frames transmitted</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txvlanframes_g</name>
     <description>Number of good VLAN frames transmitted, exclusive of retried frames</description>
     <addressOffset>0x174</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good VLAN frames transmitted, exclusive of retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_txoversize_g</name>
     <description>Number of good and bad frames received</description>
     <addressOffset>0x178</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxframecount_gb</name>
     <description>Number of good and bad frames received</description>
     <addressOffset>0x180</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxoctetcount_gb</name>
     <description>Number of bytes received, exclusive of preamble, in good and bad frames</description>
     <addressOffset>0x184</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received, exclusive of preamble, in good and bad frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxoctetcount_g</name>
     <description>Number of bytes received, exclusive of preamble, only in good frames</description>
     <addressOffset>0x188</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received, exclusive of preamble, only in good frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxbroadcastframes_g</name>
     <description>Number of good broadcast frames received</description>
     <addressOffset>0x18c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good broadcast frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxmulticastframes_g</name>
     <description>Number of good multicast frames received</description>
     <addressOffset>0x190</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good multicast frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxcrcerror</name>
     <description>Number of frames received with CRC error</description>
     <addressOffset>0x194</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with CRC error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxalignmenterror</name>
     <description>Number of frames received with alignment (dribble) error. Valid only in 10/100 mode</description>
     <addressOffset>0x198</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with alignment (dribble) error. Valid only in 10/100 mode</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxrunterror</name>
     <description>Number of frames received with runt (&lt;64 bytes and CRC error) error</description>
     <addressOffset>0x19c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with runt (&lt;64 bytes and CRC error) error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxjabbererror</name>
     <description>Number of giant frames received with length (including CRC) greater than 1,518 bytes (1,522 bytes for VLAN tagged) and with CRC error. If Jumbo Frame mode is enabled, then frames of length greater than 9,018 bytes (9,022 for VLAN tagged) are considered as giant frames</description>
     <addressOffset>0x1a0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of giant frames received with length (including CRC) greater than 1,518 bytes (1,522 bytes for VLAN tagged) and with CRC error. If Jumbo Frame mode is enabled, then frames of length greater than 9,018 bytes (9,022 for VLAN tagged) are considered as giant frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxundersize_g</name>
     <description>Number of frames received with length less than 64 bytes, without any errors</description>
     <addressOffset>0x1a4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with length less than 64 bytes, without any errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxoversize_g</name>
     <description>Number of frames received with length greater than the maxsize (1,518 or 1,522 for VLAN tagged frames), without errors</description>
     <addressOffset>0x1a8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with length greater than the maxsize (1,518 or 1,522 for VLAN tagged frames), without errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rx64octets_gb</name>
     <description>Number of good and bad frames received with length 64 bytes, exclusive of preamble</description>
     <addressOffset>0x1ac</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received with length 64 bytes, exclusive of preamble</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rx65to127octets_gb</name>
     <description>Number of good and bad frames received with length between 65 and 127 (inclusive) bytes, exclusive of preamble</description>
     <addressOffset>0x1b0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received with length between 65 and 127 (inclusive) bytes, exclusive of preamble</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rx128to255octets_gb</name>
     <description>Number of good and bad frames received with length between 128 and 255 (inclusive) bytes, exclusive of preamble</description>
     <addressOffset>0x1b4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received with length between 128 and 255 (inclusive) bytes, exclusive of preamble</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rx256to511octets_gb</name>
     <description>Number of good and bad frames received with length between 256 and 511 (inclusive) bytes, exclusive of preamble</description>
     <addressOffset>0x1b8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received with length between 256 and 511 (inclusive) bytes, exclusive of preamble</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rx512to1023octets_gb</name>
     <description>Number of good and bad frames received with length between 512 and 1,023 (inclusive) bytes, exclusive of preamble</description>
     <addressOffset>0x1bc</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received with length between 512 and 1,023 (inclusive) bytes, exclusive of preamble</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rx1024tomaxoctets_gb</name>
     <description>Number of good and bad frames received with length between 1,024 and maxsize (inclusive) bytes, exclusive of preamble and retried frames</description>
     <addressOffset>0x1c0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad frames received with length between 1,024 and maxsize (inclusive) bytes, exclusive of preamble and retried frames</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxunicastframes_g</name>
     <description>Number of good unicast frames received</description>
     <addressOffset>0x1c4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good unicast frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxlengtherror</name>
     <description>Number of frames received with length error (length type field not equal to frame size), for all frames with valid length field</description>
     <addressOffset>0x1c8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with length error (length type field not equal to frame size), for all frames with valid length field</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxoutofrangetype</name>
     <description>Number of frames received with length field not equal to the valid frame size (greater than 1,500 but less than 1,536)</description>
     <addressOffset>0x1cc</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with length field not equal to the valid frame size (greater than 1,500 but less than 1,536)</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxpauseframes</name>
     <description>Number of good and valid PAUSE frames received</description>
     <addressOffset>0x1d0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and valid PAUSE frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxfifooverflow</name>
     <description>Number of missed received frames due to FIFO overflow</description>
     <addressOffset>0x1d4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of missed received frames due to FIFO overflow</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxvlanframes_gb</name>
     <description>Number of good and bad VLAN frames received</description>
     <addressOffset>0x1d8</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good and bad VLAN frames received</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxwatchdogerror</name>
     <description>Number of frames received with error due to watchdog timeout error (frames with a data load larger than 2,048 bytes)</description>
     <addressOffset>0x1dc</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with error due to watchdog timeout error (frames with a data load larger than 2,048 bytes)</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxrcverror</name>
     <description>Number of frames received with Receive error or Frame Extension error on the GMII or MII interface.</description>
     <addressOffset>0x1e0</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of frames received with Receive error or Frame Extension error on the GMII or MII interface.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxctrlframes_g</name>
     <description>Number of received good control frames.</description>
     <addressOffset>0x1e4</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of received good control frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_IPC_Receive_Interrupt_Mask</name>
     <description>This register maintains the mask for the interrupt generated from the receive IPC statistic
counters.</description>
     <addressOffset>0x200</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rxipv4gfim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4herfim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_hdrerr_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4nopayfim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_nopay_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4fragfim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_frag_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4udsblfim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_udsbl_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6gfim</name>
       <description>Setting this bit masks the interrupt when the rxipv6_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6herfim</name>
       <description>Setting this bit masks the interrupt when the rxipv6_hdrerr_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6nopayfim</name>
       <description>Setting this bit masks the interrupt when the rxipv6_nopay_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudpgfim</name>
       <description>Setting this bit masks the interrupt when the rxudp_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudperfim</name>
       <description>Setting this bit masks the interrupt when the rxudp_err_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcpgfim</name>
       <description>Setting this bit masks the interrupt when the rxtcp_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcperfim</name>
       <description>Setting this bit masks the interrupt when the rxtcp_err_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmpgfim</name>
       <description>Setting this bit masks the interrupt when the rxicmp_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmperfim</name>
       <description>Setting this bit masks the interrupt when the rxicmp_err_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4goim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4heroim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_hdrerr_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4nopayoim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_nopay_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4fragoim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_frag_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4udsbloim</name>
       <description>Setting this bit masks the interrupt when the rxipv4_udsbl_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6goim</name>
       <description>Setting this bit masks the interrupt when the rxipv6_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6heroim</name>
       <description>Setting this bit masks interrupt when the rxipv6_hdrerr_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6nopayoim</name>
       <description>Setting this bit masks the interrupt when the rxipv6_nopay_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudpgoim</name>
       <description>Setting this bit masks the interrupt when the rxudp_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudperoim</name>
       <description>Setting this bit masks the interrupt when the rxudp_err_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcpgoim</name>
       <description>Setting this bit masks the interrupt when the rxtcp_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcperoim</name>
       <description>Setting this bit masks the interrupt when the rxtcp_err_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmpgoim</name>
       <description>Setting this bit masks the interrupt when the rxicmp_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmperoim</name>
       <description>Setting this bit masks the interrupt when the rxicmp_err_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_Mask_enum</name>
         <enumeratedValue>
          <name>nomaskintr</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>maskintr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MMC_IPC_Receive_Interrupt</name>
     <description>This register maintains the interrupts generated when receive IPC statistic counters reach half their maximum values (0x8000_0000 for 32-bit counter and 0x8000 for 16-bit counter), and when they cross their maximum values (0xFFFF_FFFF for 32-bit counter and 0xFFFF for 16-bit counter). When Counter Stop Rollover is set, then interrupts are set but the counter remains at all-ones. The MMC Receive Checksum Offload Interrupt register is 32-bits wide. When the MMC IPC counter that caused the interrupt is read, its corresponding interrupt bit is cleared. The counter's least-significant byte lane (bits[7:0]) must be read to clear the interrupt bit.</description>
     <addressOffset>0x208</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rxipv4gfis</name>
       <description>This bit is set when the rxipv4_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4herfis</name>
       <description>This bit is set when the rxipv4_hdrerr_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4nopayfis</name>
       <description>This bit is set when the rxipv4_nopay_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4fragfis</name>
       <description>This bit is set when the rxipv4_frag_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4udsblfis</name>
       <description>This bit is set when the rxipv4_udsbl_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6gfis</name>
       <description>This bit is set when the rxipv6_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6herfis</name>
       <description>This bit is set when the rxipv6_hdrerr_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>6</lsb>
       <msb>6</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6nopayfis</name>
       <description>This bit is set when the rxipv6_nopay_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>7</lsb>
       <msb>7</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudpgfis</name>
       <description>This bit is set when the rxudp_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudperfis</name>
       <description>This bit is set when the rxudp_err_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcpgfis</name>
       <description>This bit is set when the rxtcp_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcperfis</name>
       <description>This bit is set when the rxtcp_err_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmpgfis</name>
       <description>This bit is set when the rxicmp_gd_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmperfis</name>
       <description>This bit is set when the rxicmp_err_frms counter reaches half of the maximum value or the maximum value.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4gois</name>
       <description>This bit is set when the rxipv4_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4herois</name>
       <description>This bit is set when the rxipv4_hdrerr_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>17</lsb>
       <msb>17</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4nopayois</name>
       <description>This bit is set when the rxipv4_nopay_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4fragois</name>
       <description>This bit is set when the rxipv4_frag_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv4udsblois</name>
       <description>This bit is set when the rxipv4_udsbl_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6gois</name>
       <description>This bit is set when the rxipv6_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6herois</name>
       <description>This bit is set when the rxipv6_hdrerr_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>22</lsb>
       <msb>22</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxipv6nopayois</name>
       <description>This bit is set when the rxipv6_nopay_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>23</lsb>
       <msb>23</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudpgois</name>
       <description>This bit is set when the rxudp_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxudperois</name>
       <description>This bit is set when the rxudp_err_octets counter reaches half the maximum value or the maximum value.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcpgois</name>
       <description>This bit is set when the rxtcp_gd_octets counter reaches half the maximum value or the maximum value.</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxtcperois</name>
       <description>This bit is set when the rxtcp_err_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmpgois</name>
       <description>This bit is set when the rxicmp_gd_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>rxicmperois</name>
       <description>This bit is set when the rxicmp_err_octets counter reaches half of the maximum value or the maximum value.</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MMC_IPC_Receive_Interrupt_enum</name>
         <enumeratedValue>
          <name>nointerrupt</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>interr</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_gd_frms</name>
     <description>Number of good IPv4 datagrams received with the TCP, UDP, or ICMP payload</description>
     <addressOffset>0x210</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IPv4 datagrams received with the TCP, UDP, or ICMP payload</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_hdrerr_frms</name>
     <description>Number of IPv4 datagrams received with header (checksum, length, or version mismatch) errors</description>
     <addressOffset>0x214</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of IPv4 datagrams received with header (checksum, length, or version mismatch) errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_nopay_frms</name>
     <description>Number of IPv4 datagram frames received that did not have a TCP, UDP, or ICMP payload processed by the Checksum engine</description>
     <addressOffset>0x218</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of IPv4 datagram frames received that did not have a TCP, UDP, or ICMP payload processed by the Checksum engine</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_frag_frms</name>
     <description>Number of good IPv4 datagrams with fragmentation</description>
     <addressOffset>0x21c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IPv4 datagrams with fragmentation</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_udsbl_frms</name>
     <description>Number of good IPv4 datagrams received that had a UDP payload with checksum disabled</description>
     <addressOffset>0x220</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IPv4 datagrams received that had a UDP payload with checksum disabled</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv6_gd_frms</name>
     <description>Number of good IPv6 datagrams received with TCP, UDP, or ICMP payloads</description>
     <addressOffset>0x224</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IPv6 datagrams received with TCP, UDP, or ICMP payloads</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv6_hdrerr_frms</name>
     <description>Number of IPv6 datagrams received with header errors (length or version mismatch)</description>
     <addressOffset>0x228</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of IPv6 datagrams received with header errors (length or version mismatch)</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv6_nopay_frms</name>
     <description>Number of IPv6 datagram frames received that did not have a TCP, UDP, or ICMP payload. This includes all IPv6 datagrams with fragmentation or security extension headers</description>
     <addressOffset>0x22c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of IPv6 datagram frames received that did not have a TCP, UDP, or ICMP payload. This includes all IPv6 datagrams with fragmentation or security extension headers</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxudp_gd_frms</name>
     <description>Number of good IP datagrams with a good UDP payload. This counter is not updated when the counter is incremented</description>
     <addressOffset>0x230</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IP datagrams with a good UDP payload. This counter is not updated when the counter is incremented</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxudp_err_frms</name>
     <description>Number of good IP datagrams whose UDP payload has a checksum error</description>
     <addressOffset>0x234</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IP datagrams whose UDP payload has a checksum error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxtcp_gd_frms</name>
     <description>Number of good IP datagrams with a good TCP payload</description>
     <addressOffset>0x238</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IP datagrams with a good TCP payload</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxtcp_err_frms</name>
     <description>Number of good IP datagrams whose TCP payload has a checksum error</description>
     <addressOffset>0x23c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IP datagrams whose TCP payload has a checksum error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxicmp_gd_frms</name>
     <description>Number of good IP datagrams with a good ICMP payload</description>
     <addressOffset>0x240</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IP datagrams with a good ICMP payload</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxicmp_err_frms</name>
     <description>Number of good IP datagrams whose ICMP payload has a checksum error</description>
     <addressOffset>0x244</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of good IP datagrams whose ICMP payload has a checksum error</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_gd_octets</name>
     <description>Number of bytes received in good IPv4 datagrams encapsulating TCP, UDP, or ICMP data</description>
     <addressOffset>0x250</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in good IPv4 datagrams encapsulating TCP, UDP, or ICMP data</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_hdrerr_octets</name>
     <description>Number of bytes received in IPv4 datagrams with header errors (checksum, length, version mismatch). The value in the Length field of IPv4 header is used to update this counter</description>
     <addressOffset>0x254</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in IPv4 datagrams with header errors (checksum, length, version mismatch). The value in the Length field of IPv4 header is used to update this counter</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_nopay_octets</name>
     <description>Number of bytes received in IPv4 datagrams that did not have a TCP, UDP, or ICMP payload. The value in the IPv4 headers Length field is used to update this counter</description>
     <addressOffset>0x258</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in IPv4 datagrams that did not have a TCP, UDP, or ICMP payload. The value in the IPv4 headers Length field is used to update this counter</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_frag_octets</name>
     <description>Number of bytes received in fragmented IPv4 datagrams. The value in the IPv4 headers Length field is used to update this counter</description>
     <addressOffset>0x25c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in fragmented IPv4 datagrams. The value in the IPv4 headers Length field is used to update this counter</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv4_udsbl_octets</name>
     <description>Number of bytes received in a UDP segment that had the UDP checksum disabled. This counter does not count IP Header bytes</description>
     <addressOffset>0x260</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in a UDP segment that had the UDP checksum disabled. This counter does not count IP Header bytes</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv6_gd_octets</name>
     <description>Number of bytes received in good IPv6 datagrams encapsulating TCP, UDP or ICMPv6 data</description>
     <addressOffset>0x264</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in good IPv6 datagrams encapsulating TCP, UDP or ICMPv6 data</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv6_hdrerr_octets</name>
     <description>Number of bytes received in IPv6 datagrams with header errors (length, version mismatch). The value in the IPv6 headers Length field is used to update this counter</description>
     <addressOffset>0x268</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in IPv6 datagrams with header errors (length, version mismatch). The value in the IPv6 headers Length field is used to update this counter</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxipv6_nopay_octets</name>
     <description>Number of bytes received in IPv6 datagrams that did not have a TCP, UDP, or ICMP payload. The value in the IPv6 headers Length field is used to update this counter</description>
     <addressOffset>0x26c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in IPv6 datagrams that did not have a TCP, UDP, or ICMP payload. The value in the IPv6 headers Length field is used to update this counter</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxudp_gd_octets</name>
     <description>Number of bytes received in a good UDP segment. This counter does not count IP header bytes</description>
     <addressOffset>0x270</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in a good UDP segment. This counter does not count IP header bytes</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxudp_err_octets</name>
     <description>Number of bytes received in a UDP segment that had checksum errors</description>
     <addressOffset>0x274</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in a UDP segment that had checksum errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxtcp_gd_octets</name>
     <description>Number of bytes received in a good TCP segment</description>
     <addressOffset>0x278</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in a good TCP segment</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxtcperroctets</name>
     <description>Number of bytes received in a TCP segment with checksum errors</description>
     <addressOffset>0x27c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>rxtcp_err_octets</name>
       <description>Number of bytes received in a TCP segment with checksum errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxicmp_gd_octets</name>
     <description>Number of bytes received in a good ICMP segment</description>
     <addressOffset>0x280</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in a good ICMP segment</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_rxicmp_err_octets</name>
     <description>Number of bytes received in an ICMP segment with checksum errors</description>
     <addressOffset>0x284</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>cnt</name>
       <description>Number of bytes received in an ICMP segment with checksum errors</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_L3_L4_Control0</name>
     <description>
This register controls the operations of the filter 0 of Layer 3 and Layer 4.</description>
     <addressOffset>0x400</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3pen0</name>
       <description>When set, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv6 frames. When reset, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv4 frames.

The Layer 3 matching is done only when either L3SAM0 or L3DAM0 bit is set high.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3sam0</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Source Address field for matching.

Note: When Bit 0 (L3PEN0) is set, you should set either this bit or Bit 4 (L3DAM0) because either IPv6 SA or DA can be checked for filtering.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3saim0</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Source Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 2 (L3SAM0) is set high.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3dam0</name>
       <description>When set, this bit indicates that Layer 3 IP Destination Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Destination Address field for matching.

Note: When Bit 0 (L3PEN0) is set, you should set either this bit or Bit 2 (L3SAM0) because either IPv6 DA or SA can be checked for filtering.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3daim0</name>
       <description>When set, this bit indicates that the Layer 3 IP Destination Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Destination Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 4 (L3DAM0) is set high.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hsbm0</name>
       <description>IPv4 Frames: 

This field contains the number of lower bits of IP Source Address that are masked for matching in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.
IPv6 Frames: 

This field contains Bits [4:0] of the field that indicates the number of higher bits of IP Source or Destination Address matched in the IPv6 frames.
This field is valid and applicable only if L3DAM0 or L3SAM0 is set high.</description>
       <lsb>6</lsb>
       <msb>10</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hdbm0</name>
       <description>IPv4 Frames: 

This field contains the number of higher bits of IP Destination Address that are matched in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.
IPv6 Frames: 

Bits [12:11] of this field correspond to Bits [6:5] of L3HSBM0, which indicate the number of lower bits of IP Source or Destination Address that are masked in the IPv6 frames. The following list describes the concatenated values of the L3HDBM0[1:0] and L3HSBM0 bits:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 127: All bits except MSb are masked.
This field is valid and applicable only if L3DAM0 or L3SAM0 is set high.</description>
       <lsb>11</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4pen0</name>
       <description>When set, this bit indicates that the Source and Destination Port number fields for UDP frames are used for matching. When reset, this bit indicates that the Source and Destination Port number fields for TCP frames are used for matching.

The Layer 4 matching is done only when either L4SPM0 or L4DPM0 bit is set high.</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spm0</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for matching. When reset, the MAC ignores the Layer 4 Source Port number field for matching.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spim0</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for inverse matching. When reset, this bit indicates that the Layer 4 Source Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 18 (L4SPM0) is set high.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpm0</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for matching. When reset, the MAC ignores the Layer 4 Destination Port number field for matching.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpim0</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for inverse matching. When reset, this bit indicates that the Layer 4 Destination Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 20 (L4DPM0) is set high.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer4_Address0</name>
     <description>Because the Layer 3 and Layer 4 Address Registers are double-synchronized to the Rx clock domains, then the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Layer 3 and Layer 4 Address Registers are written. For proper synchronization updates, you should perform the consecutive writes to the same Layer 3 and Layer 4 Address Registers after at least four clock cycles delay of the destination clock.</description>
     <addressOffset>0x404</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l4sp0</name>
       <description>Layer 4 Source Port Number Field
When Bit 16 (L4PEN0) is reset and Bit 20 (L4DPM0) is set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the TCP Source Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN0) and Bit 20 (L4DPM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the UDP Source Port Number field in the IPv4 or IPv6 frames.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dp0</name>
       <description>When Bit 16 (L4PEN0) is reset and Bit 20 (L4DPM0) is set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the TCP Destination Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN0) and Bit 20 (L4DPM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the UDP Destination Port Number field in the IPv4 or IPv6 frames.</description>
       <lsb>16</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr0_Reg0</name>
     <description>
For IPv4 frames, the Layer 3 Address 0 Register 0 contains the 32-bit IP Source Address field. For IPv6 frames, it contains Bits[31:0] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x410</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a00</name>
       <description>When Bit 0 (L3PEN0) and Bit 2 (L3SAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits[31:0] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN0) and Bit 4 (L3DAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits [31:0] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN0) is reset and Bit 2 (L3SAM0) is set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the IP Source Address field in the IPv4 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr1_Reg0</name>
     <description>
For IPv4 frames, the Layer 3 Address 1 Register 0 contains the 32-bit IP Destination Address field. For IPv6 frames, it contains Bits[63:32] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x414</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a10</name>
       <description>When Bit 0 (L3PEN0) and Bit 2 (L3SAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits [63:32] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN0) and Bit 4 (L3DAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits [63:32] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN0) is reset and Bit 4 (L3DAM0) is set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the IP Destination Address field in the IPv4 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr2_Reg0</name>
     <description>
For IPv4 frames, the Layer 3 Address 2 Register 0 is reserved. For IPv6 frames, it contains Bits [95:64] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x418</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a20</name>
       <description>When Bit 0 (L3PEN0) and Bit 2 (L3SAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits [95:64] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN0) and Bit 4 (L3DAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains value to be matched with Bits [95:64] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN0) is reset in Register 256 (Layer 3 and Layer 4 Control Register 0), this register is not used.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr3_Reg0</name>
     <description>
For IPv4 frames, the Layer 3 Address 3 Register 0 is reserved. For IPv6 frames, it contains Bits [127:96] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x41c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a30</name>
       <description>When Bit 0 (L3PEN0) and Bit 2 (L3SAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits [127:96] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN0) and Bit 4 (L3DAM0) are set in Register 256 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with Bits [127:96] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN0) is reset in Register 256 (Layer 3 and Layer 4 Control Register 0), this register is not used.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_L3_L4_Control1</name>
     <description>This register controls the operations of the filter 0 of Layer 3 and Layer 4.</description>
     <addressOffset>0x430</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3pen1</name>
       <description>When set, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv6 frames. When reset, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv4 frames.

The Layer 3 matching is done only when either L3SAM1 or L3DAM1 bit is set high.
</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3sam1</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Source Address field for matching.

Note: When Bit 0 (L3PEN1) is set, you should set either this bit or Bit 4 (L3DAM1) because either IPv6 SA or DA can be checked for filtering.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3saim1</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Source Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 2 (L3SAM1) is set high.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3dam1</name>
       <description>When set, this bit indicates that Layer 3 IP Destination Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Destination Address field for matching.

Note: When Bit 1 (L3PEN1) is set, you should set either this bit or Bit 2 (L3SAM1) because either IPv6 DA or SA can be checked for filtering.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3daim1</name>
       <description>When set, this bit indicates that the Layer 3 IP Destination Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Destination Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 4 (L3DAM1) is set high.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hsbm1</name>
       <description>IPv4 Frames: 

This field contains the number of lower bits of IP Source Address that are masked for matching in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.
IPv6 Frames: 

This field contains Bits [4:0] of the field that indicates the number of higher bits of IP Source or Destination Address matched in the IPv6 frames.

This field is valid and applicable only if L3DAM1 or L3SAM1 is set high.</description>
       <lsb>6</lsb>
       <msb>10</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hdbm1</name>
       <description>IPv4 Frames: 

This field contains the number of higher bits of IP Destination Address that are matched in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.
IPv6 Frames: 

Bits [12:11] of this field correspond to Bits [6:5] of L3HSBM1, which indicate the number of lower bits of IP Source or Destination Address that are masked in the IPv6 frames. The following list describes the concatenated values of the L3HDBM1[1:0] and L3HSBM1 bits:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 127: All bits except MSb are masked.
This field is valid and applicable only if L3DAM1 or L3SAM1 is set high.
</description>
       <lsb>11</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4pen1</name>
       <description>When set, this bit indicates that the Source and Destination Port number fields for UDP frames are used for matching. When reset, this bit indicates that the Source and Destination Port number fields for TCP frames are used for matching.

The Layer 4 matching is done only when either L4SPM1 or L4DPM1 bit is set high.
</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spm1</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for matching.
When reset, the MAC ignores the Layer 4 Source Port number field for matching.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spim1</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for inverse matching.
When reset, this bit indicates that the Layer 4 Source Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 18 (L4SPM1) is set high.
</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpm1</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for matching.
When reset, the MAC ignores the Layer 4 Destination Port number field for matching.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpim1</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for inverse matching. 
When reset, this bit indicates that the Layer 4 Destination Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 20 (L4DPM1) is set high.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer4_Address1</name>
     <description>Because the Layer 3 and Layer 4 Address Registers are double-synchronized to the Rx clock domains, then the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Layer 3 and Layer 4 Address Registers are written. For proper synchronization updates, you should perform the consecutive writes to the same Layer 3 and Layer 4 Address Registers after at least four clock cycles delay of the destination clock.</description>
     <addressOffset>0x434</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l4sp1</name>
       <description>When Bit 16 (L4PEN1) is reset and Bit 20 (L4DPM1) is set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with the TCP Source Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN1) and Bit 20 (L4DPM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with the UDP Source Port Number field in the IPv4 or IPv6 frames.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dp1</name>
       <description>When Bit 16 (L4PEN1) is reset and Bit 20 (L4DPM1) is set in Register 268 (Layer 3 and Layer 4 Control Register 0), this field contains the value to be matched with the TCP Destination Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN1) and Bit 20 (L4DPM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with the UDP Destination Port Number field in the IPv4 or IPv6 frames.
</description>
       <lsb>16</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr0_Reg1</name>
     <description>
For IPv4 frames, the Layer 3 Address 0 Register 1 contains the 32-bit IP Source Address field. For IPv6 frames, it contains Bits[31:0] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x440</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a01</name>
       <description>When Bit 0 (L3PEN1) and Bit 2 (L3SAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits[31:0] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN1) and Bit 4 (L3DAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits [31:0] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN1) is reset and Bit 2 (L3SAM1) is set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with the IP Source Address field in the IPv4 frames.
</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr1_Reg1</name>
     <description>
For IPv4 frames, the Layer 3 Address 1 Register 1 contains the 32-bit IP Destination Address field. For IPv6 frames, it contains Bits[63:32] of the 128-bit IP Source Address or Destination Address field
</description>
     <addressOffset>0x444</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a11</name>
       <description>When Bit 0 (L3PEN1) and Bit 2 (L3SAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits [63:32] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN1) and Bit 4 (L3DAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits [63:32] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN1) is reset and Bit 4 (L3DAM1) is set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with the IP Destination Address field in the IPv4 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr2_Reg1</name>
     <description>
For IPv4 frames, the Layer 3 Address 2 Register 1 is reserved. For IPv6 frames, it contains Bits [95:64] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x448</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a21</name>
       <description>When Bit 0 (L3PEN1) and Bit 2 (L3SAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits [95:64] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN1) and Bit 4 (L3DAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains value to be matched with Bits [95:64] of the IP Destination Address field in the IPv6 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr3_Reg1</name>
     <description>
For IPv4 frames, the Layer 3 Address 3 Register 1 is reserved. For IPv6 frames, it contains Bits [127:96] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x44c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a31</name>
       <description>When Bit 1 (L3PEN1) and Bit 2 (L3SAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits [127:96] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN1) and Bit 4 (L3DAM1) are set in Register 268 (Layer 3 and Layer 4 Control Register 1), this field contains the value to be matched with Bits [127:96] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN1) is reset in Register 268 (Layer 3 and Layer 4 Control Register 1), this register is not used.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_L3_L4_Control2</name>
     <description>This register controls the operations of the filter 2 of Layer 3 and Layer 4.</description>
     <addressOffset>0x460</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3pen2</name>
       <description>When set, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv6 frames. When reset, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv4 frames.

The Layer 3 matching is done only when either L3SAM2 or L3DAM2 bit is set high.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3sam2</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Source Address field for matching.

Note: When Bit 0 (L3PEN2) is set, you should set either this bit or Bit 4 (L3DAM2) because either IPv6 SA or DA can be checked for filtering.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3saim2</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Source Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 2 (L3SAM2) is set high.
</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3dam2</name>
       <description>When set, this bit indicates that Layer 3 IP Destination Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Destination Address field for matching.

Note: When Bit 0 (L3PEN2) is set, you should set either this bit or Bit 2 (L3SAM2) because either IPv6 DA or SA can be checked for filtering.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3daim2</name>
       <description>When set, this bit indicates that the Layer 3 IP Destination Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Destination Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 4 (L3DAM2) is set high.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hsbm2</name>
       <description>Layer 3 IP SA Higher Bits Match
 
IPv4 Frames: 

This field contains the number of lower bits of IP Source Address that are masked for matching in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.
IPv6 Frames: 

This field contains Bits [4:0] of the field that indicates the number of higher bits of IP Source or Destination Address matched in the IPv6 frames.
This field is valid and applicable only if L3DAM2 or L3SAM2 is set high.</description>
       <lsb>6</lsb>
       <msb>10</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hdbm2</name>
       <description>IPv4 Frames: 

This field contains the number of higher bits of IP Destination Address that are matched in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.

IPv6 Frames: 

Bits [12:11] of this field correspond to Bits [6:5] of L3HSBM2, which indicate the number of lower bits of IP Source or Destination Address that are masked in the IPv6 frames. The following list describes the concatenated values of the L3HDBM2[1:0] and L3HSBM2 bits:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 127: All bits except MSb are masked.
This field is valid and applicable only if L3DAM2 or L3SAM2 is set high.

</description>
       <lsb>11</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4pen2</name>
       <description>When set, this bit indicates that the Source and Destination Port number fields for UDP frames are used for matching. When reset, this bit indicates that the Source and Destination Port number fields for TCP frames are used for matching.

The Layer 4 matching is done only when either L4SPM2 or L4DPM2 bit is set high.
</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spm2</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for matching. When reset, the MAC ignores the Layer 4 Source Port number field for matching.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spim2</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for inverse matching. When reset, this bit indicates that the Layer 4 Source Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 18 (L4SPM2) is set high.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpm2</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for matching. When reset, the MAC ignores the Layer 4 Destination Port number field for matching.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpim2</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for inverse matching. When reset, this bit indicates that the Layer 4 Destination Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 20 (L4DPM0) is set high.</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer4_Address2</name>
     <description>Because the Layer 3 and Layer 4 Address Registers are double-synchronized to the Rx clock domains, then the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Layer 3 and Layer 4 Address Registers are written. For proper synchronization updates, you should perform the consecutive writes to the same Layer 3 and Layer 4 Address Registers after at least four clock cycles delay of the destination clock.</description>
     <addressOffset>0x464</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l4sp2</name>
       <description>When Bit 16 (L4PEN2) is reset and Bit 20 (L4DPM2) is set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with the TCP Source Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN2) and Bit 20 (L4DPM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with the UDP Source Port Number field in the IPv4 or IPv6 frames.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dp2</name>
       <description>When Bit 16 (L4PEN2) is reset and Bit 20 (L4DPM2) is set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with the TCP Destination Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN2) and Bit 20 (L4DPM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with the UDP Destination Port Number field in the IPv4 or IPv6 frames.
</description>
       <lsb>16</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr0_Reg2</name>
     <description>
For IPv4 frames, the Layer 3 Address 0 Register 2 contains the 32-bit IP Source Address field. For IPv6 frames, it contains Bits [31:0] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x470</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a02</name>
       <description>When Bit 0 (L3PEN2) and Bit 2 (L3SAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [31:0] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN2) and Bit 4 (L3DAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [31:0] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN2) is reset and Bit 2 (L3SAM2) is set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with the IP Source Address field in the IPv4 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr1_Reg2</name>
     <description>
For IPv4 frames, the Layer 3 Address 1 Register 2 contains the 32-bit IP Destination Address field. For IPv6 frames, it contains Bits [63:32] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x474</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a12</name>
       <description>Layer 3 Address 1 Field

When Bit 0 (L3PEN2) and Bit 2 (L3SAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [63:32] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN2) and Bit 4 (L3DAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [63:32] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN2) is reset and Bit 4 (L3DAM2) is set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with the IP Destination Address field in the IPv4 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr2_Reg2</name>
     <description>
For IPv4 frames, the Layer 3 Address 2 Register 2 is reserved. For IPv6 frames, it contains Bits [95:64] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x478</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a22</name>
       <description>When Bit 0 (L3PEN2) and Bit 2 (L3SAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [95:64] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN2) and Bit 4 (L3DAM2) are set in Register 256 (Layer 3 and Layer 4 Control Register 2), this field contains value to be matched with Bits [95:64] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN2) is reset in Register 280 (Layer 3 and Layer 4 Control Register 2), this register is not used.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr3_Reg2</name>
     <description>
For IPv4 frames, the Layer 3 Address 3 Register 2 is reserved. For IPv6 frames, it contains Bits [127:96] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x47c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a32</name>
       <description>When Bit 0 (L3PEN2) and Bit 2 (L3SAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [127:96] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN2) and Bit 4 (L3DAM2) are set in Register 280 (Layer 3 and Layer 4 Control Register 2), this field contains the value to be matched with Bits [127:96] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN2) is reset in Register 280 (Layer 3 and Layer 4 Control Register 2), this register is not used.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_L3_L4_Control3</name>
     <description>This register controls the operations of the filter 0 of Layer 3 and Layer 4.</description>
     <addressOffset>0x490</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3pen3</name>
       <description>When set, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv6 frames. When reset, this bit indicates that the Layer 3 IP Source or Destination Address matching is enabled for the IPv4 frames.
The Layer 3 matching is done only when either L3SAM3 or L3DAM3 bit is set high.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3sam3</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Source Address field for matching.

Note: When Bit 0 (L3PEN3) is set, you should set either this bit or Bit 4 (L3DAM3) because either IPv6 SA or DA can be checked for filtering.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3saim3</name>
       <description>When set, this bit indicates that the Layer 3 IP Source Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Source Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 2 (L3SAM3) is set high.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3dam3</name>
       <description>When set, this bit indicates that Layer 3 IP Destination Address field is enabled for matching. When reset, the MAC ignores the Layer 3 IP Destination Address field for matching.

Note: When Bit 0 (L3PEN3) is set, you should set either this bit or Bit 2 (L3SAM3) because either IPv6 DA or SA can be checked for filtering.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3daim3</name>
       <description>When set, this bit indicates that the Layer 3 IP Destination Address field is enabled for inverse matching. When reset, this bit indicates that the Layer 3 IP Destination Address field is enabled for perfect matching.

This bit is valid and applicable only when Bit 4 (L3DAM3) is set high.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hsbm3</name>
       <description>IPv4 Frames: 

This field contains the number of lower bits of IP Source Address that are masked for matching in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.

IPv6 Frames: 

This field contains Bits [4:0] of the field that indicates the number of higher bits of IP Source or Destination Address matched in the IPv6 frames.
This field is valid and applicable only if L3DAM3 or L3SAM3 is set high.</description>
       <lsb>6</lsb>
       <msb>10</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l3hdbm3</name>
       <description>Layer 3 IP DA Higher Bits Match
IPv4 Frames: 

This field contains the number of higher bits of IP Destination Address that are matched in the IPv4 frames. The following list describes the values of this field:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 31: All bits except MSb are masked.

IPv6 Frames: 

Bits [12:11] of this field correspond to Bits [6:5] of L3HSBM3, which indicate the number of lower bits of IP Source or Destination Address that are masked in the IPv6 frames. The following list describes the concatenated values of the L3HDBM3[1:0] and L3HSBM3 bits:
 * 0: No bits are masked.
 * 1: LSb[0] is masked.
 * 2: Two LSbs [1:0] are masked.
 * ...
 * 127: All bits except MSb are masked.
This field is valid and applicable only if L3DAM3 or L3SAM3 is set high.</description>
       <lsb>11</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4pen3</name>
       <description>When set, this bit indicates that the Source and Destination Port number fields for UDP frames are used for matching. When reset, this bit indicates that the Source and Destination Port number fields for TCP frames are used for matching.
The Layer 4 matching is done only when either L4SPM3 or L4DPM3 bit is set high.
</description>
       <lsb>16</lsb>
       <msb>16</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spm3</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for matching. When reset, the MAC ignores the Layer 4 Source Port number field for matching.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4spim3</name>
       <description>When set, this bit indicates that the Layer 4 Source Port number field is enabled for inverse matching. When reset, this bit indicates that the Layer 4 Source Port number field is enabled for perfect matching.

This bit is valid and applicable only when Bit 18 (L4SPM3) is set high.
</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpm3</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for matching. When reset, the MAC ignores the Layer 4 Destination Port number field for matching.</description>
       <lsb>20</lsb>
       <msb>20</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dpim3</name>
       <description>When set, this bit indicates that the Layer 4 Destination Port number field is enabled for inverse matching. When reset, this bit indicates that the Layer 4 Destination Port number field is enabled for perfect matching.
This bit is valid and applicable only when Bit 20 (L4DPM3) is set high.
</description>
       <lsb>21</lsb>
       <msb>21</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer4_Address3</name>
     <description>Because the Layer 3 and Layer 4 Address Registers are double-synchronized to the Rx clock domains, then the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Layer 3 and Layer 4 Address Registers are written. For proper synchronization updates, you should perform the consecutive writes to the same Layer 3 and Layer 4 Address Registers after at least four clock cycles delay of the destination clock.</description>
     <addressOffset>0x494</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l4sp3</name>
       <description>When Bit 16 (L4PEN3) is reset and Bit 20 (L4DPM3) is set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with the TCP Source Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN3) and Bit 20 (L4DPM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with the UDP Source Port Number field in the IPv4 or IPv6 frames.
</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>l4dp3</name>
       <description>When Bit 16 (L4PEN3) is reset and Bit 20 (L4DPM3) is set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with the TCP Destination Port Number field in the IPv4 or IPv6 frames.

When Bit 16 (L4PEN3) and Bit 20 (L4DPM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with the UDP Destination Port Number field in the IPv4 or IPv6 frames.
</description>
       <lsb>16</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr0_Reg3</name>
     <description>
For IPv4 frames, the Layer 3 Address 0 Register 3 contains the 32-bit IP Source Address field. For IPv6 frames, it contains Bits [31:0] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x4a0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a03</name>
       <description>When Bit 0 (L3PEN3) and Bit 2 (L3SAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [31:0] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN3) and Bit 4 (L3DAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [31:0] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN3) is reset and Bit 2 (L3SAM3) is set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with the IP Source Address field in the IPv4 frames.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr1_Reg3</name>
     <description>
For IPv4 frames, the Layer 3 Address 1 Register 3 contains the 32-bit IP Destination Address field. For IPv6 frames, it contains Bits [63:32] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x4a4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a13</name>
       <description>When Bit 0 (L3PEN3) and Bit 2 (L3SAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [63:32] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN3) and Bit 4 (L3DAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [63:32] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN3) is reset and Bit 4 (L3DAM3) is set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with the IP Destination Address field in the IPv4 frames.
</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr2_Reg3</name>
     <description>
For IPv4 frames, the Layer 3 Address 2 Register 3 is reserved. For IPv6 frames, it contains Bits [95:64] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x4a8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a23</name>
       <description>When Bit 0 (L3PEN3) and Bit 2 (L3SAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [95:64] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN3) and Bit 4 (L3DAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains value to be matched with Bits [95:64] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN3) is reset in Register 292 (Layer 3 and Layer 4 Control Register 3), this register is not used.
</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Layer3_Addr3_Reg3</name>
     <description>
For IPv4 frames, the Layer 3 Address 3 Register 3 is reserved. For IPv6 frames, it contains Bits [127:96] of the 128-bit IP Source Address or Destination Address field.</description>
     <addressOffset>0x4ac</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>l3a33</name>
       <description>When Bit 0 (L3PEN3) and Bit 2 (L3SAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [127:96] of the IP Source Address field in the IPv6 frames.

When Bit 0 (L3PEN3) and Bit 4 (L3DAM3) are set in Register 292 (Layer 3 and Layer 4 Control Register 3), this field contains the value to be matched with Bits [127:96] of the IP Destination Address field in the IPv6 frames.

When Bit 0 (L3PEN3) is reset in Register 292 (Layer 3 and Layer 4 Control Register 3), this register is not used.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg0</name>
     <description>This register contains the first 32 bits of the hash table.
The 256-bit Hash table is used for group address filtering. For hash filtering, the content of the destination address in the incoming frame is passed through the CRC logic and the upper eight bits of the CRC register are used to index the content of the Hash table. The most significant bits determines the register to be used (Hash Table Register X), and the least significant five bits determine the bit within the register. For example, a hash value of 8b'10111111 selects Bit 31 of the Hash Table Register 5. 

The hash value of the destination address is calculated in the following way: 

1. Calculate the 32-bit CRC for the DA (See IEEE 802.3, Section 3.2.8 for the steps to calculate CRC32).  
2. Perform bitwise reversal for the value obtained in Step 1. 
3. Take the upper 8 bits from the value obtained in Step 2. 

If the corresponding bit value of the register is 1'b1, the frame is accepted. Otherwise, it is rejected. If the Bit 1 (Pass All Multicast) is set in Register 1 (MAC Frame Filter), then all multicast frames are accepted regardless of the multicast hash values. 
Because the Hash Table register is double-synchronized to the (G)MII clock domain, the synchronization is triggered only when Bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the Hash Table Register X registers are written.

Note: Because of double-synchronization, consecutive writes to this register should be performed after at least four clock cycles in the destination clock domain.</description>
     <addressOffset>0x500</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht31t0</name>
       <description>This field contains the first 32 Bits (31:0) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg1</name>
     <description>This register contains the second 32 bits of the hash table.</description>
     <addressOffset>0x504</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht63t32</name>
       <description>This field contains the second 32 Bits (63:32) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg2</name>
     <description>This register contains the third 32 bits of the hash table.</description>
     <addressOffset>0x508</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht95t64</name>
       <description>This field contains the third 32 Bits (95:64) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg3</name>
     <description>This register contains the fourth 32 bits of the hash table.</description>
     <addressOffset>0x50c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht127t96</name>
       <description>This field contains the fourth 32 Bits (127:96) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg4</name>
     <description>This register contains the fifth 32 bits of the hash table.</description>
     <addressOffset>0x510</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht159t128</name>
       <description>This field contains the fifth 32 Bits (159:128) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg5</name>
     <description>This register contains the sixth 32 bits of the hash table.</description>
     <addressOffset>0x514</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht191t160</name>
       <description>This field contains the sixth 32 Bits (191:160) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg6</name>
     <description>This register contains the seventh 32 bits of the hash table.</description>
     <addressOffset>0x518</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht223t196</name>
       <description>This field contains the seventh 32 Bits (223:196) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Hash_Table_Reg7</name>
     <description>This register contains the eighth 32 bits of the hash table.</description>
     <addressOffset>0x51c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ht255t224</name>
       <description>This field contains the eighth 32 Bits (255:224) of the Hash table.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_VLAN_Incl_Reg</name>
     <description>
The VLAN Tag Inclusion or Replacement register contains the VLAN tag for insertion or replacement in the transmit frames.</description>
     <addressOffset>0x584</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xfff00000</resetMask>
     <fields>
      <field>
       <name>vlt</name>
       <description>This field contains the value of the VLAN tag to be inserted or replaced. The value must only be changed when the transmit lines are inactive or during the initialization phase. Bits[15:13] are the User Priority, Bit 12 is the CFI/DEI, and Bits[11:0] are the VLAN tag's VID field.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>vlc</name>
       <description> * 2'b00: No VLAN tag deletion, insertion, or replacement
 * 2'b01: VLAN tag deletion 
The MAC removes the VLAN type (bytes 13 and 14) and VLAN tag (bytes 15 and 16) of all transmitted frames with VLAN tags. 
 * 2'b10: VLAN tag insertion
The MAC inserts VLT in bytes 15 and 16 of the frame after inserting the Type value (0x8100/0x88a8) in bytes 13 and 14. This operation is performed on all transmitted frames, irrespective of whether they already have a VLAN tag. 
 * 2'b11: VLAN tag replacement
The MAC replaces VLT in bytes 15 and 16 of all VLAN-type transmitted frames (Bytes 13 and 14 are 0x8100/0x88a8). 

Note: Changes to this field take effect only on the start of a frame. If you write this register field when a frame is being transmitted, only the subsequent frame can use the updated value, that is, the current frame does not use the updated value.</description>
       <lsb>16</lsb>
       <msb>17</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>vlp</name>
       <description>When this bit is set, the control Bits [17:16] are used for VLAN deletion, insertion, or replacement. When this bit is reset, the mti_vlan_ctrl_i control input is used, and Bits [17:16] are ignored.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>csvl</name>
       <description>When this bit is set, S-VLAN type (0x88A8) is inserted or replaced in the 13th and 14th bytes of transmitted frames. When this bit is reset, C-VLAN type (0x8100) is inserted or replaced in the transmitted frames.</description>
       <lsb>19</lsb>
       <msb>19</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_VLAN_Hash_Table_Reg</name>
     <description>
The 16-bit Hash table is used for group address filtering based on VLAN tag when Bit 18 (VTHM) of Register 7 (VLAN Tag Register) is set. For hash filtering, the content of the 16-bit VLAN tag or 12-bit VLAN ID (based on Bit 16 (ETV) of VLAN Tag Register) in the incoming frame is passed through the CRC logic and the upper four bits of the calculated CRC are used to index the contents of the VLAN Hash table. For example, a hash value of 4b'1000 selects Bit 8 of the VLAN Hash table. 
The hash value of the destination address is calculated in the following way: 

1. Calculate the 32-bit CRC for the VLAN tag or ID (See IEEE 802.3, Section 3.2.8 for the steps to calculate CRC32). 
2. Perform bitwise reversal for the value obtained in Step 1. 
3. Take the upper four bits from the value obtained in Step 2. 
If the corresponding bit value of the register is 1'b1, the frame is accepted. Otherwise, it is rejected. Because the Hash Table register is double-synchronized to the (G)MII clock domain, the synchronization is triggered only when Bits[15:8] (in little-endian mode) or Bits[7:0] (in big-endian mode) of this register are written. 

Notes:
 * Because of double-synchronization, consecutive writes to this register should be performed after at least four clock cycles in the destination clock domain.</description>
     <addressOffset>0x588</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>vlht</name>
       <description>This field contains the 16-bit VLAN Hash Table.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Timestamp_Control</name>
     <description>This register controls the operation of the System Time generator and the processing of PTP packets for timestamping in the Receiver.</description>
     <addressOffset>0x700</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x2000</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tsena</name>
       <description>When set, the timestamp is added for the transmit and receive frames. When disabled, timestamp is not added for the transmit and receive frames and the Timestamp Generator is also suspended. You need to initialize the Timestamp (system time) after enabling this mode.
On the receive side, the MAC processes the 1588 frames only if this bit is set.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsena_enum</name>
         <enumeratedValue>
          <name>notimestamp</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tscfupdt</name>
       <description>When set, this bit indicates that the system times update should be done using the fine update method. When reset, it indicates the system timestamp update should be done using the Coarse method.</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tscfupdt_enum</name>
         <enumeratedValue>
          <name>timestamp_coarse</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp_fine</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsinit</name>
       <description>When set, the system time is initialized (overwritten) with the value specified in the Register 452 (System Time - Seconds Update Register) and Register 453 (System Time - Nanoseconds Update Register).

This bit should be read zero before updating it. This bit is reset when the initialization is complete. The Timestamp Higher Word register can only be initialized.
</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsinit_enum</name>
         <enumeratedValue>
          <name>notimestamp_init</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp_init</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsupdt</name>
       <description>When set, the system time is updated (added or subtracted) with the value specified in Register 452 (System Time - Seconds Update Register) and Register 453 (System Time - Nanoseconds Update Register). 

This bit should be read zero before updating it. This bit is reset when the update is completed in hardware. The Timestamp Higher Word register is not updated.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsupdt_enum</name>
         <enumeratedValue>
          <name>notimestamp_updated</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp_updated</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tstrig</name>
       <description>When set, the timestamp interrupt is generated when the System Time becomes greater than the value written in the Target Time register. This bit is reset after the generation of the Timestamp Trigger Interrupt.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tstrig_enum</name>
         <enumeratedValue>
          <name>notimestamp_intr_trig_en</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp_intr_trig_en</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsaddreg</name>
       <description>When set, the content of the Timestamp Addend register is updated in the PTP block for fine correction. This is cleared when the update is completed. This register bit should be zero before setting it.</description>
       <lsb>5</lsb>
       <msb>5</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsaddreg_enum</name>
         <enumeratedValue>
          <name>notimestamp_addend_updated</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp_addend_updated</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsenall</name>
       <description>When set, the timestamp snapshot is enabled for all frames received by the MAC.</description>
       <lsb>8</lsb>
       <msb>8</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsenall_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsctrlssr</name>
       <description>When set, the Timestamp Low register rolls over after 0x3B9A_C9FF value (that is, 1 nanosecond accuracy) and increments the timestamp (High) seconds. When reset, the rollover value of sub-second register is 0x7FFF_FFFF. The sub-second increment has to be programmed correctly depending on the PTP reference clock frequency and the value of this bit.</description>
       <lsb>9</lsb>
       <msb>9</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsctrlssr_enum</name>
         <enumeratedValue>
          <name>notimestamp_low_roll_max</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>timestamp_low_roll_1ns</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsver2ena</name>
       <description>When set, the PTP packets are processed using the 1588 version 2 format. Otherwise, the PTP packets are processed using the version 1 format.</description>
       <lsb>10</lsb>
       <msb>10</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsver2ena_enum</name>
         <enumeratedValue>
          <name>ptp_1588_ver1</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ptp_1588_ver2</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsipena</name>
       <description>When set, the MAC receiver processes the PTP packets encapsulated directly in the Ethernet frames. When this bit is clear, the MAC ignores the PTP over Ethernet packets.</description>
       <lsb>11</lsb>
       <msb>11</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsipena_enum</name>
         <enumeratedValue>
          <name>no_process_ptp</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>process_ptp</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsipv6ena</name>
       <description>When set, the MAC receiver processes PTP packets encapsulated in UDP over IPv6 packets. When this bit is clear, the MAC ignores the PTP transported over UDP-IPv6 packets.</description>
       <lsb>12</lsb>
       <msb>12</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsipv6ena_enum</name>
         <enumeratedValue>
          <name>no_process_ptp</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>process_ptp</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsipv4ena</name>
       <description>When set, the MAC receiver processes the PTP packets encapsulated in UDP over IPv4 packets. When this bit is clear, the MAC ignores the PTP transported over UDP-IPv4 packets. This bit is set by default.</description>
       <lsb>13</lsb>
       <msb>13</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsipv4ena_enum</name>
         <enumeratedValue>
          <name>no_process_ptp</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>process_ptp</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsevntena</name>
       <description>When set, the timestamp snapshot is taken only for event messages (SYNC, Delay_Req, Pdelay_Req, or Pdelay_Resp). When reset, the snapshot is taken for all messages except Announce, Management, and Signaling.</description>
       <lsb>14</lsb>
       <msb>14</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsevntena_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tsmstrena</name>
       <description>When set, the snapshot is taken only for the messages relevant to the master node. Otherwise, the snapshot is taken for the messages relevant to the slave node.</description>
       <lsb>15</lsb>
       <msb>15</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsmstrena_enum</name>
         <enumeratedValue>
          <name>slave</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>master</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>snaptypsel</name>
       <description>These bits along with Bits 15 and 14 decide the set of PTP packet types for which snapshot needs to be taken.</description>
       <lsb>16</lsb>
       <msb>17</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>tsenmacaddr</name>
       <description>When set, the DA MAC address (that matches any MAC Address register) is used to filter the PTP frames when PTP is directly sent over Ethernet.</description>
       <lsb>18</lsb>
       <msb>18</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_tsenmacaddr_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>atsfc</name>
       <description>When set, it resets the pointers of the Auxiliary Snapshot FIFO. This bit is cleared when the pointers are reset and the FIFO is empty. When this bit is high, auxiliary snapshots get stored in the FIFO.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_atsfc_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>atsen0</name>
       <description>This field controls capturing the Auxiliary Snapshot Trigger 0. When this bit is set, the Auxiliary snapshot of event on ptp_aux_trig_i[0] input is enabled. When this bit is reset, the events on this input are ignored.</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Control_atsen0_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Sub_Second_Increment</name>
     <description>In the Coarse Update mode (TSCFUPDT bit in Register 448), the value in this register is added to the system time every clock cycle of clk_ptp_ref_i. In the Fine Update mode, the value in this register is added to the system time whenever the Accumulator gets an overflow.</description>
     <addressOffset>0x704</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ssinc</name>
       <description>The value programmed in this field is accumulated every clock cycle (of clk_ptp_i) with the contents of the sub-second register. For example, when PTP clock is 50 MHz (period is 20 ns), you should program 20 (0x14) when the System Time-Nanoseconds register has an accuracy of 1 ns (TSCTRLSSR bit is set). When TSCTRLSSR is clear, the Nanoseconds register has a resolution of ~0.465ns. In this case, you should program a value of 43 (0x2B) that is derived by 20ns/0.465.
</description>
       <lsb>0</lsb>
       <msb>7</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_System_Time_Seconds</name>
     <description>The System Time -Seconds register, along with System-TimeNanoseconds register, indicates the current value of the system time maintained by the MAC. Though it is updated on a continuous basis, there is some delay from the actual time because of clock domain transfer latencies (from clk_ptp_ref_i to l3_sp_clk).</description>
     <addressOffset>0x708</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tss</name>
       <description>The value in this field indicates the current value in seconds of the System Time maintained by the MAC.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_System_Time_Nanoseconds</name>
     <description>The value in this field has the sub second representation of time, with an accuracy of 0.46 ns. When TSCTRLSSR is set, each bit represents 1 ns and the maximum value is 0x3B9A_C9FF, after which it rolls-over to zero.</description>
     <addressOffset>0x70c</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tsss</name>
       <description>The value in this field has the sub second representation of time, with an accuracy of 0.46 ns. When bit 9 (TSCTRLSSR) is set in Register 448 (Timestamp Control Register), each bit represents 1 ns and the maximum value is 0x3B9A_C9FF, after which it rolls-over to zero.</description>
       <lsb>0</lsb>
       <msb>30</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_System_Time_Seconds_Update</name>
     <description>
The System Time - Seconds Update register, along with the System Time - Nanoseconds Update register, initializes or updates the system time maintained by the MAC. You must write both of these registers before setting the TSINIT or TSUPDT bits in the Timestamp Control register.</description>
     <addressOffset>0x710</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tss</name>
       <description>The value in this field indicates the time in seconds to be initialized or added to the system time.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_System_Time_Nanoseconds_Update</name>
     <description>Update system time</description>
     <addressOffset>0x714</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tsss</name>
       <description>The value in this field has the sub second representation of time, with an accuracy of 0.46 ns. When bit 9 (TSCTRLSSR) is set in Register 448 (Timestamp Control Register), each bit represents 1 ns and the programmed value should not exceed 0x3B9A_C9FF.</description>
       <lsb>0</lsb>
       <msb>30</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>addsub</name>
       <description>When this bit is set, the time value is subtracted with the contents of the update register. When this bit is reset, the time value is added with the contents of the update register.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_System_Time_Nanoseconds_Update_addsub_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Timestamp_Addend</name>
     <description>This register value is used only when the system time is configured for Fine Update mode (TSCFUPDT bit in Register 448). This register content is added to a 32-bit accumulator in every clock cycle (of clk_ptp_ref_i) and the system time is updated whenever the accumulator overflows.</description>
     <addressOffset>0x718</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tsar</name>
       <description>This field indicates the 32-bit time value to be added to the Accumulator register to achieve time synchronization.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Target_Time_Seconds</name>
     <description>
The Target Time Seconds register, along with Target Time Nanoseconds register, is used to schedule an interrupt event (Register 458[1] when Advanced Timestamping is enabled; otherwise, TS interrupt bit in Register14[9]) when the system time exceeds the value programmed in these registers.</description>
     <addressOffset>0x71c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tstr</name>
       <description>This register stores the time in seconds. When the timestamp value matches or exceeds both Target Timestamp registers, then based on Bits [6:5] of Register 459 (PPS Control Register), the MAC starts or stops the PPS signal output and generates an interrupt (if enabled).</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Target_Time_Nanoseconds</name>
     <description>Target time</description>
     <addressOffset>0x720</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ttslo</name>
       <description>This register stores the time in (signed) nanoseconds. When the value of the timestamp matches the both Target Timestamp registers, then based on the TRGTMODSEL0 field (Bits [6:5]) in Register 459 (PPS Control Register), the MAC starts or stops the PPS signal output and generates an interrupt (if enabled). 

This value should not exceed 0x3B9A_C9FF when TSCTRLSSR is set in the Timestamp control register. The actual start or stop time of the PPS signal output may have an error margin up to one unit of sub-second increment value.
</description>
       <lsb>0</lsb>
       <msb>30</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>trgtbusy</name>
       <description>The MAC sets this bit when the PPSCMD field (Bits[3:0]) in Register 459 (PPS Control Register) is programmed to 010 or 011. Programming the PPSCMD field to 010 or 011, instructs the MAC to synchronize the Target Time Registers to the PTP clock domain. 

The MAC clears this bit after synchronizing the Target Time Registers to the PTP clock domain The application must not update the Target Time Registers when this bit is read as 1. Otherwise, the synchronization of the previous programmed time gets corrupted. This bit is reserved when the Enable Flexible Pulse-Per-Second Output feature is not selected.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_System_Time_Higher_Word_Seconds</name>
     <description>System time higher word</description>
     <addressOffset>0x724</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tshwr</name>
       <description>This field contains the most significant 16-bits of the timestamp seconds value. The register is directly written to initialize the value. This register is incremented when there is an overflow from the 32-bits of the System Time - Seconds register.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Timestamp_Status</name>
     <description>Timestamp status. All bits except Bits[27:25] get cleared when the host reads this register.</description>
     <addressOffset>0x728</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>tssovf</name>
       <description>When set, this bit indicates that the seconds value of the timestamp (when supporting version 2 format) has overflowed beyond 32'hFFFF_FFFF.</description>
       <lsb>0</lsb>
       <msb>0</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Status_tssovf_enum</name>
         <enumeratedValue>
          <name>reset</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>set</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tstargt</name>
       <description>When set, this bit indicates that the value of system time is greater or equal to the value specified in the Register 455 (Target Time Seconds Register) and Register 456 (Target Time Nanoseconds Register).</description>
       <lsb>1</lsb>
       <msb>1</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Status_tstargt_enum</name>
         <enumeratedValue>
          <name>reset</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>set</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>auxtstrig</name>
       <description>This bit is set high when the auxiliary snapshot is written to the FIFO.</description>
       <lsb>2</lsb>
       <msb>2</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Status_auxtstrig_enum</name>
         <enumeratedValue>
          <name>reset</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>set</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>tstrgterr</name>
       <description>This bit is set when the target time, being programmed in Target Time Registers, is already elapsed. This bit is cleared when read by the application.</description>
       <lsb>3</lsb>
       <msb>3</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Status_tstrgterr_enum</name>
         <enumeratedValue>
          <name>reset</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>set</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>atsstn</name>
       <description>These bits identify the Auxiliary trigger inputs for which the timestamp available in the Auxiliary Snapshot Register is applicable. When more than one bit is set at the same time, it means that corresponding auxiliary triggers were sampled at the same clock. These bits are applicable only if the number of Auxiliary snapshots is more than one. One bit is assigned for each trigger as shown in the following list:
 * Bit 16: Auxiliary trigger 0
 * Bit 17: Auxiliary trigger 1
 * Bit 18: Auxiliary trigger 2
 * Bit 19: Auxiliary trigger 3
The software can read this register to find the triggers that are set when the timestamp is taken.
</description>
       <lsb>16</lsb>
       <msb>19</msb>
       <access>read-only</access>
      </field>
      <field>
       <name>atsstm</name>
       <description>This bit is set when the Auxiliary timestamp snapshot FIFO is full and external trigger was set. This indicates that the latest snapshot is not stored in the FIFO.</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-only</access>
       <enumeratedValues>
        <name>emac_gmacgrp_Timestamp_Status_atsstm_enum</name>
         <enumeratedValue>
          <name>notfull</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>full</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>atsns</name>
       <description>This field indicates the number of Snapshots available in the FIFO. A value of 16 (equal to the depth of the FIFO) indicates that the Auxiliary Snapshot FIFO is full. These bits are cleared (to 00000) when the Auxiliary snapshot FIFO clear bit is set.</description>
       <lsb>25</lsb>
       <msb>29</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_PPS_Control</name>
     <description>Controls timestamp Pulse-Per-Second output</description>
     <addressOffset>0x72c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ppsctrl_ppscmd</name>
       <description>PPSCTRL0: PPS0 Output Frequency Control

This field controls the frequency of the PPS0 output (ptp_pps_o[0]) signal. The default value of PPSCTRL is 0000, and the PPS output is 1 pulse (of width clk_ptp_i) every second. For other values of PPSCTRL, the PPS output becomes a generated clock of following frequencies: 

 -0001: The binary rollover is 2 Hz, and the digital rollover is 1 Hz.
 -0010: The binary rollover is 4 Hz, and the digital rollover is 2 Hz.
 -0011: The binary rollover is 8 Hz, and the digital rollover is 4 Hz.
 -0100: The binary rollover is 16 Hz, and the digital rollover is 8 Hz. 
 -...
 -1111: The binary rollover is 32.768 KHz, and the digital rollover is 16.384 KHz.
 
Note:

In the binary rollover mode, the PPS output (ptp_pps_o) has a duty cycle of 50 percent with these frequencies.

In the digital rollover mode, the PPS output frequency is an average number. The actual clock is of different frequency that gets synchronized every second. For example:

 * When PPSCTRL = 0001, the PPS (1 Hz) has a low period of 537 ms and a high period of 463 ms
 * When PPSCTRL = 0010, the PPS (2 Hz) is a sequence of:
 - One clock of 50 percent duty cycle and 537 ms period
 - Second clock of 463 ms period (268 ms low and 195 ms high) 
 * When PPSCTRL = 0011, the PPS (4 Hz) is a sequence of:
 - Three clocks of 50 percent duty cycle and 268 ms period
 - Fourth clock of 195 ms period (134 ms low and 61 ms high)
This behavior is because of the non-linear toggling of bits in the digital rollover mode in Register 451 (System Time - Nanoseconds Register).

Flexible PPS0 Output (ptp_pps_o[0]) Control
Programming these bits with a non-zero value instructs the MAC to initiate an event. Once the command is transferred or synchronized to the PTP clock domain, these bits get cleared automatically. The Software should ensure that these bits are programmed only when they are all-zero. The following list describes the values of PPSCMD0:

 * 0000: No Command
 * 0001: START Single Pulse
This command generates single pulse rising at the start point defined in Target Time Registers (register 455 and 456) and of a duration defined in the PPS0 Width Register.
 * 0010: START Pulse Train
This command generates the train of pulses rising at the start point defined in the Target Time Registers and of a duration defined in the PPS0 Width Register and repeated at interval defined in the PPS Interval Register. By default, the PPS pulse train is free-running unless stopped by 'STOP Pulse train at time' or 'STOP Pulse Train immediately' commands.
 * 0011: Cancel START 
This command cancels the START Single Pulse and START Pulse Train commands if the system time has not crossed the programmed start time.
 * 0100: STOP Pulse train at time 
This command stops the train of pulses initiated by the START Pulse Train command (PPSCMD = 0010) after the time programmed in the Target Time registers elapses. 
 * 0101: STOP Pulse Train immediately
This command immediately stops the train of pulses initiated by the START Pulse Train command (PPSCMD = 0010). 
 * 0110: Cancel STOP Pulse train 
This command cancels the STOP pulse train at time command if the programmed stop time has not elapsed. The PPS pulse train becomes free-running on the successful execution of this command. 
 * 0111-1111: Reserved</description>
       <lsb>0</lsb>
       <msb>3</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>ppsen0</name>
       <description>When set low, Bits[3:0] function as PPSCTRL (backward compatible). When set high, Bits[3:0] function as PPSCMD.</description>
       <lsb>4</lsb>
       <msb>4</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_PPS_Control_ppsen0_enum</name>
         <enumeratedValue>
          <name>ppsctrl</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>ppscmd</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>trgtmodsel0</name>
       <description>This field indicates the Target Time registers (register 455 and 456) mode for PPS0 output signal</description>
       <lsb>5</lsb>
       <msb>6</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_PPS_Control_trgtmodsel0_enum</name>
         <enumeratedValue>
          <name>trgtinteronly</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>trgtintpps0</name>
          <value>2</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>trgtnointer</name>
          <value>3</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Auxiliary_Timestamp_Nanoseconds</name>
     <description>This register, along with Register 461 (Auxiliary Timestamp  Seconds Register), gives the 64-bit timestamp stored as auxiliary snapshot. The two registers together form the read port of a 64-bit wide FIFO with a depth of 16. Multiple snapshots can be stored in this FIFO. The ATSNS bits in the Timestamp Status register indicate the fill-level of this FIFO. The top of the FIFO is removed only when the last byte of Register 461 (Auxiliary Timestamp - Seconds Register) is read. In the little-endian mode, this means when Bits[31:24] are read. In big-endian mode, it corresponds to the reading of Bits[7:0] of Register 461 (Auxiliary Timestamp - Seconds Register).</description>
     <addressOffset>0x730</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>auxtslo</name>
       <description>Contains the lower 32 bits (nano-seconds field) of the auxiliary timestamp.</description>
       <lsb>0</lsb>
       <msb>30</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_Auxiliary_Timestamp_Seconds</name>
     <description>Contains the higher 32 bits (Seconds field) of the auxiliary timestamp.</description>
     <addressOffset>0x734</addressOffset>
     <size>32</size>
     <access>read-only</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>auxtshi</name>
       <description>Contains the higher 32 bits (Seconds field) of the auxiliary timestamp.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-only</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_PPS0_Interval</name>
     <description>The PPS0 Interval register contains the number of units of sub-second increment value between the rising edges of PPS0 signal output (ptp_pps_o[0]).</description>
     <addressOffset>0x760</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ppsint</name>
       <description>These bits store the interval between the rising edges of PPS0 signal output in terms of units of sub-second increment value. 
You need to program one value less than the required interval. For example, if the PTP reference clock is 50 MHz (period of 20ns), and desired interval between rising edges of PPS0 signal output is 100ns (that is, five units of sub-second increment value), then you should program value 4 (5 -1) in this register.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_PPS0_Width</name>
     <description>
The PPS0 Width register contains the number of units of sub-second increment value between the rising and corresponding falling edges of the PPS0 signal output (ptp_pps_o[0]).</description>
     <addressOffset>0x764</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0x0</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>ppswidth</name>
       <description>These bits store the width between the rising edge and corresponding falling edge of the PPS0 signal output in terms of units of sub-second increment value. 

You need to program one value less than the required interval. For example, if PTP reference clock is 50 MHz (period of 20ns), and desired width between the rising and corresponding falling edges of PPS0 signal output is 80ns (that is, four units of sub-second increment value), then you should program value 3 (4-1) in this register.

Note: 
The value programmed in this register must be lesser than the value programmed in Register 472 (PPS0 Interval Register).
</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address16_High</name>
     <description>The MAC Address16 High register holds the upper 16 bits of the 17th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address16 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x800</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 17th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address16 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address16 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address16 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address16 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address16 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address16 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address16[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address16[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 17th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address16_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address16_Low</name>
     <description>The MAC Address16 Low register holds the lower 32 bits of the 17th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x804</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 17th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address17_High</name>
     <description>The MAC Address17 High register holds the upper 16 bits of the 18th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address17 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x808</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 18th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address17 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address17 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address17 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address17 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address17 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address17 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address17[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address17[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 18th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address17_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address17_Low</name>
     <description>The MAC Address17 Low register holds the lower 32 bits of the 18th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x80c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 18th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address18_High</name>
     <description>The MAC Address18 High register holds the upper 16 bits of the 19th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address18 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x810</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 19th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address18 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address18 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address18 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address18 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address18 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address18 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address18[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address18[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 19th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address18_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address18_Low</name>
     <description>The MAC Address18 Low register holds the lower 32 bits of the 19th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x814</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 19th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address19_High</name>
     <description>The MAC Address19 High register holds the upper 16 bits of the 20th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address19 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x818</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 20th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address19 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address19 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address19 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address19 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address19 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address19 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address19[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address19[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 20th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address19_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address19_Low</name>
     <description>The MAC Address19 Low register holds the lower 32 bits of the 20th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x81c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 20th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address20_High</name>
     <description>The MAC Address20 High register holds the upper 16 bits of the 21th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address20 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x820</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 21th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address20 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address20 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address20 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address20 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address20 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address20 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address20[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address20[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 21th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address20_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address20_Low</name>
     <description>The MAC Address20 Low register holds the lower 32 bits of the 21th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x824</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 21th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address21_High</name>
     <description>The MAC Address21 High register holds the upper 16 bits of the 22th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address21 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x828</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 22th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address21 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address21 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address21 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address21 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address21 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address21 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address21[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address21[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 22th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address21_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address21_Low</name>
     <description>The MAC Address21 Low register holds the lower 32 bits of the 22th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x82c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 22th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address22_High</name>
     <description>The MAC Address22 High register holds the upper 16 bits of the 23th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address22 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x830</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 23th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address22 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address22 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address22 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address22 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address22 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address22 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address22[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address22[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 23th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address22_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address22_Low</name>
     <description>The MAC Address22 Low register holds the lower 32 bits of the 23th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x834</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 23th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address23_High</name>
     <description>The MAC Address23 High register holds the upper 16 bits of the 24th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address23 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x838</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 24th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address23 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address23 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address23 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address23 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address23 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address23 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address23[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address23[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 24th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address23_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address23_Low</name>
     <description>The MAC Address23 Low register holds the lower 32 bits of the 24th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x83c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 24th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address24_High</name>
     <description>The MAC Address24 High register holds the upper 16 bits of the 25th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address24 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x840</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 25th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address24 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address24 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address24 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address24 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address24 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address24 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address24[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address24[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 25th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address24_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address24_Low</name>
     <description>The MAC Address24 Low register holds the lower 32 bits of the 25th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x844</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 25th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address25_High</name>
     <description>The MAC Address25 High register holds the upper 16 bits of the 26th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address25 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x848</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 26th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address25 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address25 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address25 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address25 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address25 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address25 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address25[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address25[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 26th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address25_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address25_Low</name>
     <description>The MAC Address25 Low register holds the lower 32 bits of the 26th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x84c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 26th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address26_High</name>
     <description>The MAC Address26 High register holds the upper 16 bits of the 27th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address26 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x850</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 27th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address26 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address26 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address26 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address26 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address26 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address26 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address26[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address26[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 27th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address26_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address26_Low</name>
     <description>The MAC Address26 Low register holds the lower 32 bits of the 27th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x854</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 27th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address27_High</name>
     <description>The MAC Address27 High register holds the upper 16 bits of the 28th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address27 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x858</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 28th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address27 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address27 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address27 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address27 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address27 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address27 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address27[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address27[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 28th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address27_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address27_Low</name>
     <description>The MAC Address27 Low register holds the lower 32 bits of the 28th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x85c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 28th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address28_High</name>
     <description>The MAC Address28 High register holds the upper 16 bits of the 29th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address28 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x860</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 29th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address28 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address28 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address28 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address28 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address28 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address28 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address28[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address28[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 29th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address28_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address28_Low</name>
     <description>The MAC Address28 Low register holds the lower 32 bits of the 29th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x864</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 29th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address29_High</name>
     <description>The MAC Address29 High register holds the upper 16 bits of the 30th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address29 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x868</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 30th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address29 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address29 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address29 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address29 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address29 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address29 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address29[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address29[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 30th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address29_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address29_Low</name>
     <description>The MAC Address29 Low register holds the lower 32 bits of the 30th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x86c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 30th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address30_High</name>
     <description>The MAC Address30 High register holds the upper 16 bits of the 31th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address30 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x870</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 31th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address30 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address30 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address30 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address30 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address30 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address30 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address30[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address30[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 31th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address30_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address30_Low</name>
     <description>The MAC Address30 Low register holds the lower 32 bits of the 31th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x874</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 31th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address31_High</name>
     <description>The MAC Address31 High register holds the upper 16 bits of the 32th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address31 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x878</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 32th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address31 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address31 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address31 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address31 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address31 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address31 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address31[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address31[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 32th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address31_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address31_Low</name>
     <description>The MAC Address31 Low register holds the lower 32 bits of the 32th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x87c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 32th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address32_High</name>
     <description>The MAC Address32 High register holds the upper 16 bits of the 33th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address32 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x880</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 33th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address32 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address32 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address32 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address32 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address32 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address32 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address32[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address32[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 33th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address32_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address32_Low</name>
     <description>The MAC Address32 Low register holds the lower 32 bits of the 33th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x884</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 33th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address33_High</name>
     <description>The MAC Address33 High register holds the upper 16 bits of the 34th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address33 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x888</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 34th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address33 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address33 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address33 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address33 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address33 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address33 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address33[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address33[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 34th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address33_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address33_Low</name>
     <description>The MAC Address33 Low register holds the lower 32 bits of the 34th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x88c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 34th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address34_High</name>
     <description>The MAC Address34 High register holds the upper 16 bits of the 35th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address34 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x890</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 35th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address34 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address34 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address34 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address34 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address34 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address34 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address34[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address34[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 35th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address34_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address34_Low</name>
     <description>The MAC Address34 Low register holds the lower 32 bits of the 35th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x894</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 35th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address35_High</name>
     <description>The MAC Address35 High register holds the upper 16 bits of the 36th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address35 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x898</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 36th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address35 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address35 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address35 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address35 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address35 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address35 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address35[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address35[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 36th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address35_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address35_Low</name>
     <description>The MAC Address35 Low register holds the lower 32 bits of the 36th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x89c</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 36th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address36_High</name>
     <description>The MAC Address36 High register holds the upper 16 bits of the 37th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address36 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8a0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 37th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address36 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address36 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address36 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address36 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address36 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address36 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address36[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address36[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 37th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address36_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address36_Low</name>
     <description>The MAC Address36 Low register holds the lower 32 bits of the 37th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8a4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 37th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address37_High</name>
     <description>The MAC Address37 High register holds the upper 16 bits of the 38th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address37 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8a8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 38th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address37 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address37 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address37 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address37 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address37 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address37 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address37[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address37[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 38th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address37_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address37_Low</name>
     <description>The MAC Address37 Low register holds the lower 32 bits of the 38th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8ac</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 38th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address38_High</name>
     <description>The MAC Address38 High register holds the upper 16 bits of the 39th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address38 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8b0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 39th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address38 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address38 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address38 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address38 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address38 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address38 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address38[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address38[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 39th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address38_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address38_Low</name>
     <description>The MAC Address38 Low register holds the lower 32 bits of the 39th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8b4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 39th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address39_High</name>
     <description>The MAC Address39 High register holds the upper 16 bits of the 40th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address39 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8b8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 40th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address39 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address39 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address39 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address39 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address39 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address39 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address39[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address39[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 40th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address39_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address39_Low</name>
     <description>The MAC Address39 Low register holds the lower 32 bits of the 40th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8bc</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 40th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address40_High</name>
     <description>The MAC Address40 High register holds the upper 16 bits of the 41th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address40 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8c0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 41th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address40 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address40 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address40 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address40 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address40 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address40 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address40[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address40[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 41th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address40_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address40_Low</name>
     <description>The MAC Address40 Low register holds the lower 32 bits of the 41th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8c4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 41th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address41_High</name>
     <description>The MAC Address41 High register holds the upper 16 bits of the 42th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address41 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8c8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 42th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address41 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address41 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address41 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address41 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address41 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address41 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address41[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address41[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 42th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address41_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address41_Low</name>
     <description>The MAC Address41 Low register holds the lower 32 bits of the 42th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8cc</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 42th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address42_High</name>
     <description>The MAC Address42 High register holds the upper 16 bits of the 43th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address42 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8d0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 43th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address42 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address42 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address42 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address42 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address42 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address42 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address42[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address42[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 43th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address42_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address42_Low</name>
     <description>The MAC Address42 Low register holds the lower 32 bits of the 43th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8d4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 43th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address43_High</name>
     <description>The MAC Address43 High register holds the upper 16 bits of the 44th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address43 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8d8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 44th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address43 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address43 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address43 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address43 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address43 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address43 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address43[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address43[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 44th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address43_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address43_Low</name>
     <description>The MAC Address43 Low register holds the lower 32 bits of the 44th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8dc</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 44th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address44_High</name>
     <description>The MAC Address44 High register holds the upper 16 bits of the 45th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address44 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8e0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 45th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address44 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address44 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address44 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address44 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address44 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address44 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address44[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address44[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 45th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address44_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address44_Low</name>
     <description>The MAC Address44 Low register holds the lower 32 bits of the 45th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8e4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 45th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address45_High</name>
     <description>The MAC Address45 High register holds the upper 16 bits of the 46th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address45 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8e8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 46th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address45 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address45 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address45 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address45 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address45 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address45 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address45[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address45[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 46th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address45_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address45_Low</name>
     <description>The MAC Address45 Low register holds the lower 32 bits of the 46th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8ec</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 46th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address46_High</name>
     <description>The MAC Address46 High register holds the upper 16 bits of the 47th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address46 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8f0</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 47th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address46 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address46 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address46 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address46 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address46 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address46 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address46[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address46[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 47th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address46_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address46_Low</name>
     <description>The MAC Address46 Low register holds the lower 32 bits of the 47th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8f4</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 47th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address47_High</name>
     <description>The MAC Address47 High register holds the upper 16 bits of the 48th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address47 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x8f8</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 48th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address47 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address47 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address47 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address47 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address47 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address47 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address47[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address47[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 48th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address47_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address47_Low</name>
     <description>The MAC Address47 Low register holds the lower 32 bits of the 48th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x8fc</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 48th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address48_High</name>
     <description>The MAC Address48 High register holds the upper 16 bits of the 49th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address48 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x900</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 49th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address48 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address48 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address48 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address48 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address48 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>28</lsb>
       <msb>28</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_5</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address48 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>29</lsb>
       <msb>29</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>sa</name>
       <description>When this bit is enabled, the MAC Address48[47:0] is used to compare with the SA fields of the received frame. When this bit is disabled, the MAC Address48[47:0] is used to compare with the DA fields of the received frame.</description>
       <lsb>30</lsb>
       <msb>30</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_sa_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>ae</name>
       <description>When this bit is enabled, the address filter block uses the 49th MAC address for perfect filtering. When this bit is disabled, the address filter block ignores the address for filtering.</description>
       <lsb>31</lsb>
       <msb>31</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address48_High_ae_enum</name>
         <enumeratedValue>
          <name>disabled</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>enabled</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address48_Low</name>
     <description>The MAC Address48 Low register holds the lower 32 bits of the 49th 6-byte MAC address of the station.
Note that all MAC Address Low registers (except MAC Address0 Low) have the same format.</description>
     <addressOffset>0x904</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffffffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrlo</name>
       <description>This field contains the lower 32 bits of the 49th 6-byte MAC address. The content of this field is undefined until loaded by software after the initialization process.</description>
       <lsb>0</lsb>
       <msb>31</msb>
       <access>read-write</access>
      </field>
     </fields>
    </register>
    <register>
     <name>gmacgrp_MAC_Address49_High</name>
     <description>The MAC Address49 High register holds the upper 16 bits of the 50th 6-byte MAC address of the station. Because the MAC address registers are configured to be double-synchronized to the (G)MII clock domains, the synchronization is triggered only when bits[31:24] (in little-endian mode) or Bits[7:0] (in big-endian mode) of the MAC Address49 Low Register are written. For proper synchronization updates, the consecutive writes to this Address Low Register should be performed after at least four clock cycles in the destination clock domain.
Note that all MAC Address High registers (except MAC Address0 High) have the same format.</description>
     <addressOffset>0x908</addressOffset>
     <size>32</size>
     <access>read-write</access>
     <resetValue>0xffff</resetValue>
     <resetMask>0xffffffff</resetMask>
     <fields>
      <field>
       <name>addrhi</name>
       <description>This field contains the upper 16 bits (47:32) of the 50th 6-byte MAC address.</description>
       <lsb>0</lsb>
       <msb>15</msb>
       <access>read-write</access>
      </field>
      <field>
       <name>mbc_0</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address49 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>24</lsb>
       <msb>24</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address49_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_1</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address49 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>25</lsb>
       <msb>25</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address49_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_2</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address49 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>26</lsb>
       <msb>26</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address49_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_3</name>
       <description>This array of bits are mask control bits for comparison of each of the MAC Address bytes. When masked, the MAC does not compare the corresponding byte of received DA or SA with the contents of MAC Address49 high and low registers. Each bit controls the masking of the bytes. You can filter a group of addresses (known as group address filtering) by masking one or more bytes of the address.
The array index corresponds to the byte (e.g. index 0 is for bits 7:0).</description>
       <lsb>27</lsb>
       <msb>27</msb>
       <access>read-write</access>
       <enumeratedValues>
        <name>emac_gmacgrp_MAC_Address49_High_mbc_enum</name>
         <enumeratedValue>
          <name>unmasked</name>
          <value>0</value>
         </enumeratedValue>
         <enumeratedValue>
          <name>masked</name>
          <value>1</value>
         </enumeratedValue>
       </enumeratedValues>
      </field>
      <field>
       <name>mbc_4</name>
       <description>This array of bits are mask control bits for compari